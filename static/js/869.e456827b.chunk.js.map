{"version":3,"file":"static/js/869.e456827b.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.jsx","components/BackLinkButton/BackLinkButton.styled.jsx","components/MovieItem/MovieItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.jsx","components/SortButtons/SortButtons.jsx","pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/Person/Person.jsx","pages/Person/Person.styled.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Button } from './BackLinkButton.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nexport const BackLinkButton = ({ backLinkHref }) => {\n  return (\n    <Link to={backLinkHref}>\n      <Button>\n        <FaLongArrowAltLeft />\n        Go back\n      </Button>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  height: 25px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  font-size: medium;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  padding: 5px 0 5px 0;\n  // color: darkblue;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(30%, -100%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import { LiDecor, StyledLink, StyledFilmIcon } from './MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\n\nexport const MovieItem = ({\n  movie,\n  hoveredId,\n  setHoveredId,\n  hoveredImageUrl,\n  setHoveredImageUrl,\n  location,\n}) => {\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, title, release_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor key={id}>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {title}, ({release_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={title}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import { FaLongArrowAltDown, FaLongArrowAltUp } from 'react-icons/fa';\n\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\nimport { SortBox } from 'pages/Person/Person.styled';\nexport function SortButtons({\n  setFieldSorted,\n  toggleOrder,\n  fieldSorted,\n  order,\n}) {\n  const buttonClass = field => (field === fieldSorted ? 'active' : 'inactive');\n\n  return (\n    <SortBox>\n      {/* <p style={{ marginRight: '10px' }}>Sort by:</p> */}\n      <Button\n        className={buttonClass('Trends')}\n        onClick={() => {\n          setFieldSorted('Trends');\n        }}\n      >\n        Trends\n      </Button>\n      <Button\n        className={buttonClass('Rating')}\n        onClick={() => {\n          setFieldSorted('Rating');\n          toggleOrder();\n        }}\n      >\n        Rating\n        {fieldSorted === 'Rating' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n\n      <Button\n        className={buttonClass('Date')}\n        onClick={() => {\n          setFieldSorted('Date');\n          toggleOrder();\n        }}\n      >\n        Date\n        {fieldSorted === 'Date' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n      <Button\n        className={buttonClass('Title')}\n        onClick={() => {\n          setFieldSorted('Title');\n          toggleOrder();\n        }}\n      >\n        Title\n        {fieldSorted === 'Title' &&\n          (order ? <FaLongArrowAltDown /> : <FaLongArrowAltUp />)}\n      </Button>\n    </SortBox>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding-bottom: 10px;\n  font-size: xx-large;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const ImageFilm = styled.img`\n  @media (max-width: 500px) {\n    width: 400px;\n  }\n  @media (max-width: 400px) {\n    width: 350px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { BackLinkButton } from 'components/BackLinkButton/BackLinkButton';\nimport { Container, Title } from 'pages/Home/Home.styled';\nimport { MediumTitle } from 'pages/MoviesDetails/MoviesDetails.styled';\nimport {\n  PersonContainer,\n  FilmBox,\n  PersonBox,\n  PersonList,\n  ButtonBox,\n} from './Person.styled';\nimport { fetchData, getImageUrl } from 'utils/fetchData';\nimport { getSortedFilmography, formateDate } from 'utils/functions';\nimport { searchParams, basicURL } from 'utils/constants';\nimport { SortButtons } from 'components/SortButtons/SortButtons';\n\nexport default function Person() {\n  const [person, setPerson] = useState(null);\n  const [personMoovies, setPersonMoovies] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const toggleOrder = () => {\n    setOrder(order ? false : true);\n  };\n\n  const backLinkHref = location.state?.from ?? '/';\n  // console.log(backLinkHref);\n\n  useEffect(() => {\n    const URL = `${basicURL}/person/${id}/movie_credits?${searchParams}`;\n    const personURL = `${basicURL}/person/${id}?${searchParams}`;\n\n    fetchData(URL, setPersonMoovies, setError);\n    fetchData(personURL, setPerson, setError);\n  }, [id]);\n\n  if (personMoovies && person) {\n    const { cast } = personMoovies;\n    const sortedFilmography = getSortedFilmography(fieldSorted, cast, order);\n    const { name, profile_path, birthday, deathday } = person;\n\n    const formattedBirthday = formateDate(birthday);\n    const formattedDeathday = formateDate(deathday);\n\n    return (\n      <div>\n        <ButtonBox>\n          <BackLinkButton backLinkHref={backLinkHref} />\n        </ButtonBox>\n        <PersonContainer>\n          <PersonBox>\n            <img src={getImageUrl(profile_path)} alt={name} height={281} />\n            {<Title>{name}</Title>}\n            <MediumTitle>\n              {deathday\n                ? `(${formattedBirthday} - ${formattedDeathday})`\n                : `(${formattedBirthday})`}\n            </MediumTitle>\n          </PersonBox>\n          <FilmBox>\n            <SortButtons\n              setFieldSorted={setFieldSorted}\n              toggleOrder={toggleOrder}\n              fieldSorted={fieldSorted}\n              order={order}\n            />\n            <MediumTitle style={{ textAlign: 'center', marginBottom: '20px' }}>\n              Filmography\n            </MediumTitle>\n            <PersonList>\n              {sortedFilmography.map(movie => (\n                <MovieItem\n                  key={movie.id}\n                  movie={movie}\n                  hoveredId={hoveredId}\n                  setHoveredId={setHoveredId}\n                  hoveredImageUrl={hoveredImageUrl}\n                  setHoveredImageUrl={setHoveredImageUrl}\n                  location={location}\n                />\n              ))}\n            </PersonList>\n          </FilmBox>\n        </PersonContainer>\n      </div>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  text-align: center;\n\n  @media (max-width: 900px) {\n    flex-wrap: wrap;\n  }\n`;\nexport const PersonList = styled.div`\n  column-count: 1;\n  column-gap: 20px;\n\n  @media (min-width: 750px) {\n    column-count: 2;\n  }\n`;\nexport const PersonBox = styled.div`\n  max-width: 450px;\n  min-width: 300px;\n  @media (min-width: 900px) {\n    padding-top: 80px;\n  }\n`;\nexport const ButtonBox = styled.div`\n  padding: 5px;\n`;\nexport const SortBox = styled.div`\n  display: flex;\n  justify-content: left;\n  gap: 5px;\n`;\nexport const FilmBox = styled.div`\n  text-align: left;\n  min-width: 300px;\n`;\n","// export const API_KEY = 'b30750fbe582936755a0930282f9befd';\nexport const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import { basicSmallImageURL, basicBigImageURL } from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(profilePath, small = false) {\n  if (profilePath) {\n    return small\n      ? basicSmallImageURL + profilePath\n      : basicBigImageURL + profilePath;\n  } else {\n    return hasNotPhotoPerson;\n  }\n}\n","export function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, cast, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = cast;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(cast);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n\n    default:\n      sortedFilmography = cast;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n"],"names":["BackLinkButton","backLinkHref","to","Button","styled","StyledLink","Link","StyledFilmIcon","HiFilm","LiDecor","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","MovieItem","movie","hoveredId","setHoveredId","setHoveredImageUrl","location","id","release_date","vote_average","backdrop_path","state","from","onMouseEnter","imageUrl","fetchImage","handleMouseEnter","onMouseLeave","slice","voteToPersent","SortButtons","setFieldSorted","toggleOrder","fieldSorted","order","buttonClass","field","className","onClick","Container","Title","InfoBox","Box","MoreInfoBox","ImageFilm","Thumb","GenreList","BoxInside","MediumTitle","Person","useState","person","setPerson","personMoovies","setPersonMoovies","setOrder","error","setError","useParams","useLocation","useEffect","URL","basicURL","searchParams","personURL","fetchData","cast","sortedFilmography","getSortedFilmography","name","profile_path","birthday","deathday","formattedBirthday","formateDate","formattedDeathday","getImageUrl","height","style","textAlign","marginBottom","map","message","PersonContainer","PersonList","PersonBox","ButtonBox","SortBox","FilmBox","API_KEY","process","URLSearchParams","api_key","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","console","profilePath","small","hasNotPhotoPerson","vote","persentVote","Math","floor","date","Date","toUTCString","sortByField","arr","direction","sort","a","b","makeNewArray","item","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push"],"sourceRoot":""}
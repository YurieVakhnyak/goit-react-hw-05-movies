{"version":3,"file":"static/js/291.bd018224.chunk.js","mappings":"+QAEaA,EAAWC,EAAAA,GAAAA,GAAH,8DAKRC,EAAOD,EAAAA,GAAAA,EAAH,6CAIJE,EAAQF,EAAAA,GAAAA,IAAH,2DAKLG,EAAOH,EAAAA,GAAAA,IAAH,2K,2HCdJI,E,QAAcJ,GAAAA,GAAH,mE,6BCKT,SAASK,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,IALAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,UAAMC,EAAAA,GAAN,kBAAwBJ,EAAxB,oBAAsCK,EAAAA,KAC/CC,EAAAA,EAAAA,GAAUH,EAAKN,EAAiBE,EACjC,GAAE,CAACC,IAEAJ,EAAc,CAChB,IAAQW,EAAYX,EAAZW,QACR,OAAIA,EAAQC,OAAS,GAEjB,2BACE,wBACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,SAAClB,EAAD,UAAciB,KACd,SAAC,KAAD,UAAOC,MAFAD,EADE,SAWjB,0BACGZ,EAAQA,EAAMc,SAAU,yDAIhC,CACF,C,wJCxCM,IAAMC,EAAU,mCAEVR,EAAe,IAAIS,gBAAgB,CAC9CC,QAASF,IAGET,EAAW,+BAEXY,EAAmB,kCAEnBC,EAAqB,iC,uBCV3B,SAASX,EAAUY,EAAKC,EAASpB,GACtCqB,MAAMF,GACHG,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,4BACjC,IACAN,MAAK,SAAAO,GACJT,EAAQS,EACT,IACAC,OAAM,SAAA/B,GACLC,EAASD,EACV,GACJ,C","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","utils/constants.js","utils/fetchData.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Text = styled.p`\n  font-size: small;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  font-weight: 500;\n  width: 150px;\n  height: 200px;\n`;\n","import styled from 'styled-components';\n\nexport const ReviewTitle = styled.ul`\n  margin-left: 20px;\n  font-weight: 500;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Text } from 'components/MovieCast/MovieCast.styled';\nimport { ReviewTitle } from './MovieReviews.styled';\nimport { fetchData } from 'utils/fetchData';\nimport { searchParams, basicURL } from 'utils/constants';\n\nexport default function MovieReviews() {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const URL = `${basicURL}/movie/${id}/reviews?${searchParams}`;\n    fetchData(URL, setMovieReviews, setError);\n  }, [id]);\n\n  if (movieReviews) {\n    const { results } = movieReviews;\n    if (results.length > 0) {\n      return (\n        <main>\n          <ul>\n            {results.map(({ author, content }) => (\n              <li key={author}>\n                <ReviewTitle>{author}</ReviewTitle>\n                <Text>{content}</Text>\n              </li>\n            ))}\n          </ul>\n        </main>\n      );\n    } else {\n      return (\n        <main>\n          {error ? error.message : <p>We couldn't find any reviews</p>}\n        </main>\n      );\n    }\n  }\n}\n","export const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","export function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n"],"names":["CastList","styled","Text","Image","Card","ReviewTitle","MovieReviews","useState","movieReviews","setMovieReviews","error","setError","id","useParams","useEffect","URL","basicURL","searchParams","fetchData","results","length","map","author","content","message","API_KEY","URLSearchParams","api_key","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch"],"sourceRoot":""}
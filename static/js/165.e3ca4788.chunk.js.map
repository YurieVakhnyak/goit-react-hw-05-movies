{"version":3,"file":"static/js/165.e3ca4788.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.jsx","components/BackLinkButton/BackLinkButton.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.jsx","components/MovieItem/MovieItem.styled.jsx","components/SortButtons/SortButtons.styled.jsx","components/SortButtons/SortButtons.jsx","pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/PersonDetails/PersonDetails.styled.jsx","pages/PersonDetails/PersonDetails.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Button } from './BackLinkButton.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nexport const BackLinkButton = ({ backLinkHref }) => {\n  return (\n    <Link to={backLinkHref}>\n      <Button>\n        <FaLongArrowAltLeft />\n        Go back\n      </Button>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  height: 25px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  font-size: medium;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(30%, -100%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import { LiDecor, StyledLink, StyledFilmIcon } from './MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\n\nexport const MovieItem = ({\n  movie,\n  index,\n  hoveredId,\n  setHoveredId,\n  hoveredImageUrl,\n  setHoveredImageUrl,\n  location,\n}) => {\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, title, release_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor key={id}>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {index + 1}. {title}, ({release_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={title}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  padding: 5px 0 5px 0;\n  // color: darkblue;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const SortBox = styled.div`\n  display: flex;\n\n  gap: 5px;\n`;\n","import { FaLongArrowAltDown, FaLongArrowAltUp } from 'react-icons/fa';\n\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\nimport { SortBox } from './SortButtons.styled';\nexport function SortButtons({\n  setFieldSorted,\n  toggleOrder,\n  fieldSorted,\n  order,\n}) {\n  const buttonClass = field => (field === fieldSorted ? 'active' : 'inactive');\n\n  return (\n    <SortBox>\n      <Button\n        className={buttonClass('Trends')}\n        onClick={() => {\n          setFieldSorted('Trends');\n        }}\n      >\n        Trends\n      </Button>\n      <Button\n        className={buttonClass('Rating')}\n        onClick={() => {\n          setFieldSorted('Rating');\n          toggleOrder();\n        }}\n      >\n        Rating\n        {fieldSorted === 'Rating' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n\n      <Button\n        className={buttonClass('Date')}\n        onClick={() => {\n          setFieldSorted('Date');\n          toggleOrder();\n        }}\n      >\n        Date\n        {fieldSorted === 'Date' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n      <Button\n        className={buttonClass('Title')}\n        onClick={() => {\n          setFieldSorted('Title');\n          toggleOrder();\n        }}\n      >\n        Title\n        {fieldSorted === 'Title' &&\n          (order ? <FaLongArrowAltDown /> : <FaLongArrowAltUp />)}\n      </Button>\n    </SortBox>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const SortThumb = styled.div`\n  padding-top: 10px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  max-width: 500px;\n  padding: 5px 0 5px 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const ImageFilm = styled.img`\n  @media (max-width: 500px) {\n    width: 400px;\n  }\n  @media (max-width: 400px) {\n    width: 350px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  gap: 50px;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  text-align: center;\n\n  @media (max-width: 900px) {\n    flex-wrap: wrap;\n  }\n`;\nexport const PersonList = styled.div`\n  column-count: 1;\n  column-gap: 20px;\n\n  @media (min-width: 750px) {\n    column-count: 2;\n  }\n`;\nexport const PersonBox = styled.div`\n  max-width: 450px;\n  min-width: 300px;\n  @media (min-width: 900px) {\n    padding-top: 80px;\n  }\n`;\nexport const ButtonBox = styled.div`\n  padding: 5px;\n`;\n\nexport const FilmBox = styled.div`\n  text-align: left;\n  min-width: 300px;\n`;\nexport const PersonSortBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { BackLinkButton } from 'components/BackLinkButton/BackLinkButton';\nimport { Container, Title } from 'pages/Home/Home.styled';\nimport { MediumTitle } from 'pages/MoviesDetails/MoviesDetails.styled';\nimport {\n  PersonContainer,\n  FilmBox,\n  PersonBox,\n  PersonSortBox,\n  PersonList,\n  ButtonBox,\n} from './PersonDetails.styled';\nimport { fetchData, getImageUrl } from 'utils/fetchData';\nimport { getSortedFilmography, formateDate } from 'utils/functions';\nimport { searchParams, basicURL } from 'utils/constants';\nimport { SortButtons } from 'components/SortButtons/SortButtons';\n\nexport default function Person() {\n  const [person, setPerson] = useState(null);\n  const [personMoovies, setPersonMoovies] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState(true);\n  const [error, setError] = useState(null);\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const toggleOrder = () => {\n    setOrder(order ? false : true);\n  };\n\n  const backLinkHref = location.state?.from ?? '/';\n  // console.log(backLinkHref);\n\n  useEffect(() => {\n    const URL = `${basicURL}/person/${id}/movie_credits?${searchParams}`;\n    const personURL = `${basicURL}/person/${id}?${searchParams}`;\n\n    fetchData(URL, setPersonMoovies, setError);\n    fetchData(personURL, setPerson, setError);\n  }, [id]);\n\n  if (personMoovies && person) {\n    const { cast } = personMoovies;\n    const sortedFilmography = getSortedFilmography(fieldSorted, cast, order);\n    const { name, profile_path, birthday, deathday } = person;\n\n    const formattedBirthday = formateDate(birthday);\n    const formattedDeathday = formateDate(deathday);\n\n    return (\n      <div>\n        <ButtonBox>\n          <BackLinkButton backLinkHref={backLinkHref} />\n        </ButtonBox>\n        <PersonContainer>\n          <PersonBox>\n            <img src={getImageUrl(profile_path)} alt={name} height={281} />\n            {<Title>{name}</Title>}\n            <MediumTitle>\n              {deathday\n                ? `(${formattedBirthday} - ${formattedDeathday})`\n                : `(${formattedBirthday})`}\n            </MediumTitle>\n          </PersonBox>\n          <FilmBox>\n            <PersonSortBox>\n              <SortButtons\n                setFieldSorted={setFieldSorted}\n                toggleOrder={toggleOrder}\n                fieldSorted={fieldSorted}\n                order={order}\n              />\n            </PersonSortBox>\n            <MediumTitle style={{ textAlign: 'center', marginBottom: '20px' }}>\n              Filmography\n            </MediumTitle>\n            <PersonList>\n              {sortedFilmography.map((movie, index) => (\n                <MovieItem\n                  key={movie.id}\n                  index={index}\n                  movie={movie}\n                  hoveredId={hoveredId}\n                  setHoveredId={setHoveredId}\n                  hoveredImageUrl={hoveredImageUrl}\n                  setHoveredImageUrl={setHoveredImageUrl}\n                  location={location}\n                />\n              ))}\n            </PersonList>\n          </FilmBox>\n        </PersonContainer>\n      </div>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","// export const API_KEY = 'b30750fbe582936755a0930282f9befd';\nexport const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import {\n  searchParams,\n  basicURL,\n  basicSmallImageURL,\n  basicBigImageURL,\n} from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\nimport hasNotFilmImage from '../images/NoFilmImage.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(imagePath, small = false, type = 'person') {\n  if (imagePath) {\n    return small\n      ? basicSmallImageURL + imagePath\n      : basicBigImageURL + imagePath;\n  } else {\n    return type === 'person' ? hasNotPhotoPerson : hasNotFilmImage;\n  }\n}\n\nexport function getExtraInfoUrl(id, type, dataType) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const dataAltType = dataType === 'cast' ? 'credits' : 'reviews';\n  const URL = `${basicURL}/${mediaType}/${id}/${dataAltType}?${searchParams}`;\n  return URL;\n}\n\nexport function getTrendsUrl(type, period) {\n  const mediaType =\n    type === 'tv' ? 'tv' : type === 'person' ? 'person' : 'movie';\n  const URL = `${basicURL}/trending/${mediaType}/${period}?${searchParams}`;\n  return URL;\n}\n","export function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, cast, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = cast;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(cast);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n\n    default:\n      sortedFilmography = cast;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n\nexport const getTrendingTitle = (period, type) => {\n  let mediaType;\n\n  switch (type) {\n    case 'tv':\n      mediaType = 'TV Shows';\n      break;\n    case 'movie':\n      mediaType = 'Movies';\n      break;\n    case 'person':\n      mediaType = 'People';\n      break;\n    default:\n      mediaType = 'Movies';\n  }\n\n  const timePeriod = period === 'week' ? 'week' : 'today';\n  return `${mediaType} trending ${timePeriod}`;\n};\n"],"names":["BackLinkButton","backLinkHref","to","Button","styled","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","MovieItem","movie","index","hoveredId","setHoveredId","setHoveredImageUrl","location","id","release_date","vote_average","backdrop_path","state","from","onMouseEnter","imageUrl","fetchImage","handleMouseEnter","onMouseLeave","slice","voteToPersent","StyledLink","Link","StyledFilmIcon","HiFilm","LiDecor","SortBox","SortButtons","setFieldSorted","toggleOrder","fieldSorted","order","buttonClass","field","className","onClick","Container","SortThumb","Title","InfoBox","Box","MoreInfoBox","ImageFilm","Thumb","GenreList","BoxInside","MediumTitle","PersonContainer","PersonList","PersonBox","ButtonBox","FilmBox","PersonSortBox","Person","useState","person","setPerson","personMoovies","setPersonMoovies","setOrder","error","setError","useParams","useLocation","useEffect","URL","basicURL","searchParams","personURL","fetchData","cast","sortedFilmography","getSortedFilmography","name","profile_path","birthday","deathday","formattedBirthday","formateDate","formattedDeathday","getImageUrl","height","style","textAlign","marginBottom","map","message","API_KEY","process","URLSearchParams","api_key","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","console","imagePath","small","type","hasNotPhotoPerson","hasNotFilmImage","getExtraInfoUrl","dataType","mediaType","dataAltType","getTrendsUrl","period","vote","persentVote","Math","floor","date","Date","toUTCString","sortByField","arr","direction","sort","a","b","makeNewArray","item","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push","getTrendingTitle","timePeriod"],"sourceRoot":""}
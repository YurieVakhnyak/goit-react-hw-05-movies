{"version":3,"file":"static/js/294.e7baac21.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.styled.jsx","components/SortButtons/SortButtons.styled.jsx","components/SortButtons/SortButtons.jsx","components/TrendingTitle/TrendingTitle.styled.jsx","components/TrendingTitle/TrendingTitle.jsx","pages/Home/Home.styled.jsx","components/TVShowsItem/TVShowsItem.jsx","components/TVShowList/TVShowList.jsx","pages/TVShows/TVShows.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  height: 25px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  font-size: medium;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(50%, -117%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n  vertical-align: middle;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  vertical-align: middle;\n`;\n\nexport const LiDecor = styled.li`\n  min-height: 30px;\n`;\n","import styled from 'styled-components';\nimport { FaLongArrowAltDown, FaLongArrowAltUp } from 'react-icons/fa';\n\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport const SortBox = styled.div`\n  display: flex;\n  gap: 10px;\n\n  @media (max-width: 430px) {\n    gap: 10px;\n    margin-bottom: 5px;\n  }\n`;\nexport const SortStyledButton = styled(Button)`\n  position: relative;\n  @media (max-width: 430px) {\n    min-width: 80px;\n  }\n`;\nexport const StyledFaLongArrowAltDown = styled(FaLongArrowAltDown)`\n  position: absolute;\n right: 5%;\n  }\n`;\nexport const StyledFaLongArrowAltUp = styled(FaLongArrowAltUp)`\n  position: absolute; \n  right: 5%;\n  }\n`;\n","import {\n  StyledFaLongArrowAltDown,\n  StyledFaLongArrowAltUp,\n} from './SortButtons.styled';\n\nimport { SortBox, SortStyledButton } from './SortButtons.styled';\nexport function SortButtons({ sortProps }) {\n  const { type, setFieldSorted, toggleOrder, fieldSorted, order } = sortProps;\n  const buttonClass = field => (field === fieldSorted ? 'active' : 'inactive');\n\n  return (\n    <SortBox>\n      <SortStyledButton\n        className={buttonClass('Trends')}\n        onClick={() => {\n          setFieldSorted('Trends');\n        }}\n      >\n        Trends\n      </SortStyledButton>\n      <SortStyledButton\n        className={buttonClass('Rating')}\n        onClick={() => {\n          setFieldSorted('Rating');\n          toggleOrder();\n        }}\n      >\n        Rating\n        {fieldSorted === 'Rating' &&\n          (order ? <StyledFaLongArrowAltDown /> : <StyledFaLongArrowAltUp />)}\n      </SortStyledButton>\n\n      <SortStyledButton\n        className={buttonClass('Date')}\n        onClick={() => {\n          setFieldSorted(type === 'tv' ? 'AirDate' : 'Date');\n          toggleOrder();\n        }}\n      >\n        Date\n        {(fieldSorted === 'Date' || fieldSorted === 'AirDate') &&\n          (order ? <StyledFaLongArrowAltDown /> : <StyledFaLongArrowAltUp />)}\n      </SortStyledButton>\n      <SortStyledButton\n        className={buttonClass('Title')}\n        onClick={() => {\n          setFieldSorted(type === 'tv' ? 'Name' : 'Title');\n          toggleOrder();\n        }}\n      >\n        Title\n        {(fieldSorted === 'Title' || fieldSorted === 'Name') &&\n          (order ? <StyledFaLongArrowAltUp /> : <StyledFaLongArrowAltDown />)}\n      </SortStyledButton>\n    </SortBox>\n  );\n}\n","import styled from 'styled-components';\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport const TitleBox = styled.div`\n  display: flex;\n  gap: 30px;\n\n  min-height: 50px;\n  justify-content: space-around;\n  align-items: center;\n  min-width: 350px;\n  max-width: 530px;\n  @media (max-width: 520px) {\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n  vertical-align: super;\n  @media (max-width: 520px) {\n    font-size: 28px;\n  }\n`;\nexport const ButtonThumb = styled.div`\n  margin-top: 10px;\n  @media (max-width: 421px) {\n    margin-bottom: 5px;\n  }\n  @media (max-width: 520px) {\n    margin-top: 0px;\n  }\n`;\nexport const ButtonsChanged = styled(Button)`\n  min-width: 100px;\n  &:focus {\n    // color: darkblue;\n    // color: white;\n  }\n  &:hover {\n    color: blue;\n  }\n`;\n","import {\n  ButtonsChanged,\n  Title,\n  TitleBox,\n  ButtonThumb,\n} from './TrendingTitle.styled';\nimport { useState } from 'react';\nimport { getTrendingTitle } from 'utils/functions';\n\nexport const TrendingTitle = ({ setPeriod, period, type }) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const togglePeriod = () => {\n    setPeriod(period === 'day' ? 'week' : 'day');\n  };\n  return (\n    <TitleBox>\n      <Title>\n        {getTrendingTitle(period, type, isHovered)}\n        {/* prosto kin'\n        <span style={{ color: isHovered ? 'red' : 'yellow' }}>Horse</span> */}\n      </Title>\n      <ButtonThumb>\n        <ButtonsChanged\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          onClick={togglePeriod}\n        >\n          Timeframe\n        </ButtonsChanged>\n      </ButtonThumb>\n    </TitleBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const SortThumb = styled.div`\n  padding-top: 10px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  max-width: 500px;\n  padding: 5px 0 5px 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n`;\n","import {\n  LiDecor,\n  StyledLink,\n  StyledFilmIcon,\n} from 'components/MovieItem/MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const TVShowsItem = ({\n  movie,\n  index,\n  // hoveredId,\n  // setHoveredId,\n  // hoveredImageUrl,\n  // setHoveredImageUrl,\n  // location,\n}) => {\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const location = useLocation();\n\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, name, first_air_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor key={id}>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/tv-shows/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {index + 1}. {name}, ({first_air_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={name}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import { TVShowsItem } from 'components/TVShowsItem/TVShowsItem';\n\nexport const TVShowList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map((movie, index) => (\n        <TVShowsItem key={movie.id} movie={movie} index={index} />\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { fetchData, getTrendsUrl } from 'utils/fetchData';\nimport { getSortedFilmography } from 'utils/functions';\nimport { SortButtons } from 'components/SortButtons/SortButtons';\nimport { Container, SortThumb } from 'pages/Home/Home.styled';\nimport { TVShowList } from 'components/TVShowList/TVShowList';\nimport { TrendingTitle } from 'components/TrendingTitle/TrendingTitle';\n\nexport default function TVShows() {\n  const [trending, setTrending] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState(true);\n  const [period, setPeriod] = useState('day');\n  const [error, setError] = useState(null);\n  const type = 'tv';\n\n  const toggleOrder = () => {\n    setOrder(order ? false : true);\n  };\n\n  useEffect(() => {\n    const URL = getTrendsUrl(type, period);\n    fetchData(URL, setTrending, setError);\n  }, [period]);\n\n  const sortProps = {\n    type,\n    setFieldSorted,\n    fieldSorted,\n    toggleOrder,\n    order,\n  };\n\n  if (trending) {\n    const { results } = trending;\n\n    const sortedFilmography = getSortedFilmography(fieldSorted, results, order);\n\n    return (\n      <Container>\n        <SortThumb>\n          <SortButtons sortProps={sortProps} />\n        </SortThumb>\n        <TrendingTitle setPeriod={setPeriod} period={period} type={type} />\n        <TVShowList movies={sortedFilmography} />\n      </Container>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","export const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en',\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import {\n  searchParams,\n  basicURL,\n  basicSmallImageURL,\n  basicBigImageURL,\n} from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\nimport hasNotFilmImage from '../images/NoFilmImage.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(imagePath, small = false, type = 'person') {\n  if (imagePath) {\n    return small\n      ? basicSmallImageURL + imagePath\n      : basicBigImageURL + imagePath;\n  } else {\n    return type === 'person' ? hasNotPhotoPerson : hasNotFilmImage;\n  }\n}\n\nexport function getExtraInfoUrl(id, type, dataType) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const dataAltType = dataType === 'cast' ? 'credits' : 'reviews';\n  const URL = `${basicURL}/${mediaType}/${id}/${dataAltType}?${searchParams}`;\n  return URL;\n}\n\nexport function getTrendsUrl(type, period, language = 'en') {\n  const newSearchParams = new URLSearchParams(searchParams);\n  newSearchParams.set('language', language);\n  const mediaType =\n    type === 'tv' ? 'tv' : type === 'person' ? 'person' : 'movie';\n  const URL = `${basicURL}/trending/${mediaType}/${period}?${newSearchParams}`;\n  return URL;\n}\n","import { Fragment } from 'react';\n\nexport function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, list, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = list;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(list);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'AirDate':\n      const newArrayByAirDate = makeNewArray(list);\n      sortedFilmography = sortByField(\n        newArrayByAirDate,\n        'first_air_date',\n        order\n      );\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n    case 'Name':\n      const newArrayByName = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByName, 'name', order);\n      break;\n\n    default:\n      sortedFilmography = list;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n\nexport const getTrendingTitle = (period, type, isHovered) => {\n  let mediaType;\n\n  switch (type) {\n    case 'tv':\n      mediaType = 'TV Shows';\n      break;\n    case 'movie':\n      mediaType = 'Movies';\n      break;\n    case 'person':\n      mediaType = 'People';\n      break;\n    default:\n      mediaType = 'Movies';\n  }\n\n  const timePeriod = period === 'week' ? 'week' : 'today';\n  return (\n    <Fragment>\n      {mediaType} trending{' '}\n      <span style={{ textDecoration: isHovered ? 'underline' : 'none' }}>\n        {timePeriod}\n      </span>\n    </Fragment>\n  );\n  // `${mediaType} trending ${timePeriod} `;\n};\n\nvar countries = require('i18n-iso-countries');\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\nexport function getCountryName(code, language = 'en') {\n  return countries.getName(code, language);\n}\n"],"names":["Button","styled","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","StyledLink","Link","StyledFilmIcon","HiFilm","LiDecor","SortBox","SortStyledButton","StyledFaLongArrowAltDown","FaLongArrowAltDown","StyledFaLongArrowAltUp","FaLongArrowAltUp","SortButtons","sortProps","type","setFieldSorted","toggleOrder","fieldSorted","order","buttonClass","field","className","onClick","TitleBox","Title","ButtonThumb","ButtonsChanged","TrendingTitle","setPeriod","period","useState","isHovered","setIsHovered","getTrendingTitle","onMouseEnter","onMouseLeave","Container","SortThumb","TVShowsItem","movie","index","hoveredId","setHoveredId","setHoveredImageUrl","location","useLocation","id","name","first_air_date","vote_average","backdrop_path","to","state","from","imageUrl","fetchImage","handleMouseEnter","slice","voteToPersent","TVShowList","movies","map","TVShows","trending","setTrending","setOrder","error","setError","useEffect","URL","getTrendsUrl","fetchData","results","sortedFilmography","getSortedFilmography","message","API_KEY","process","searchParams","URLSearchParams","api_key","language","basicURL","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","console","getImageUrl","imagePath","small","hasNotPhotoPerson","hasNotFilmImage","getExtraInfoUrl","dataType","mediaType","dataAltType","newSearchParams","set","vote","persentVote","Math","floor","formateDate","date","Date","toUTCString","sortByField","arr","direction","sort","a","b","makeNewArray","item","list","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push","timePeriod","Fragment","style","textDecoration","countries","require","getCountryName","code","getName","registerLocale"],"sourceRoot":""}
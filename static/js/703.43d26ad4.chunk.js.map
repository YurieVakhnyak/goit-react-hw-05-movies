{"version":3,"file":"static/js/703.43d26ad4.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.jsx","pages/Home/Home.styled.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  padding: 5px 0 5px 0;\n  // color: darkblue;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(30%, -100%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import { LiDecor, StyledLink, StyledFilmIcon } from './MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\n\nexport const MovieItem = ({\n  movie,\n  hoveredId,\n  setHoveredId,\n  hoveredImageUrl,\n  setHoveredImageUrl,\n  location,\n}) => {\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, title, release_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor key={id}>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {title}, ({release_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={title}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding-bottom: 10px;\n  font-size: xx-large;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  min-width: 200px;\n  max-width: 280px;\n  gap: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  margin-bottom: 20px;\n`;\nexport const InputStyled = styled.input`\n  min-height: 30px;\n  min-width: 260px;\n  border-radius: 5px;\n  padding: 0 5px 0 15px;\n`;\nexport const SearchText = styled.p`\n  font-weight: 500;\n  font-size: large;\n  margin-left: 5px;\n`;\n","import { FormStyled, SearchText, InputStyled } from './SearchBar.styled';\n\nexport const SearchBar = ({ value, onSearch }) => {\n  return (\n    <FormStyled>\n      <SearchText>Search movie</SearchText>\n      <InputStyled\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n        defaultValue={value}\n        onChange={evt => onSearch(evt.target.value)}\n      />\n    </FormStyled>\n  );\n};\n","import { Container } from 'pages/Home/Home.styled';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { fetchData } from 'utils/fetchData';\nimport { sortByField } from 'utils/functions';\nimport { API_KEY, basicURL } from 'utils/constants';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const handleSearchParams = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n  const queryInput = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: queryInput,\n    });\n    const URL = `${basicURL}/search/movie?${searchParams}`;\n\n    if (queryInput !== '' || queryInput !== null) {\n      fetchData(URL, setMovies, setError);\n    }\n  }, [queryInput]);\n\n  if (movies) {\n    const sortedMovies = sortByField(movies.results, 'release_date');\n    return (\n      <Container>\n        <SearchBar value={queryInput} onSearch={handleSearchParams} />\n        <ul>\n          {sortedMovies.map(movie => (\n            <MovieItem\n              key={movie.id}\n              movie={movie}\n              hoveredId={hoveredId}\n              setHoveredId={setHoveredId}\n              hoveredImageUrl={hoveredImageUrl}\n              setHoveredImageUrl={setHoveredImageUrl}\n              location={location}\n            />\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      {error ? (\n        error.message\n      ) : (\n        <SearchBar onSearch={queryInput} onSearchParams={handleSearchParams} />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n","// export const API_KEY = 'b30750fbe582936755a0930282f9befd';\nexport const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import { basicSmallImageURL, basicBigImageURL } from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(profilePath, small = false) {\n  if (profilePath) {\n    return small\n      ? basicSmallImageURL + profilePath\n      : basicBigImageURL + profilePath;\n  } else {\n    return hasNotPhotoPerson;\n  }\n}\n","export function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, cast, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(cast);\n\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n\n      break;\n    case 'Date':\n      sortedFilmography = sortByField(cast, 'release_date', order);\n      break;\n    case 'Title':\n      sortedFilmography = sortByField(cast, 'title', order);\n\n      break;\n    default:\n      sortedFilmography = cast;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n"],"names":["StyledLink","styled","Link","StyledFilmIcon","HiFilm","LiDecor","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","MovieItem","movie","hoveredId","setHoveredId","setHoveredImageUrl","location","id","release_date","vote_average","backdrop_path","to","state","from","onMouseEnter","imageUrl","fetchImage","handleMouseEnter","onMouseLeave","slice","voteToPersent","Container","Title","FormStyled","InputStyled","SearchText","SearchBar","value","onSearch","type","placeholder","defaultValue","onChange","evt","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","useLocation","handleSearchParams","query","queryInput","get","useEffect","URLSearchParams","api_key","API_KEY","URL","basicURL","fetchData","sortedMovies","sortByField","results","map","message","onSearchParams","process","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","console","getImageUrl","profilePath","small","hasNotPhotoPerson","vote","persentVote","Math","floor","formateDate","date","Date","toUTCString","arr","field","order","direction","sort","a","b","getSortedFilmography","fieldSorted","cast","sortedFilmography","item","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push"],"sourceRoot":""}
{"version":3,"file":"static/js/746.d2ce196b.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,KAAH,oGAMTC,EAAQD,EAAAA,GAAAA,GAAH,2EAKLE,EAAUF,EAAAA,GAAAA,GAAH,6E,qICbPG,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,6BACE,yCACA,kBACEC,KAAK,OACLC,aAAcH,EACdI,SAAU,SAAAC,GAAG,OAAIJ,EAASI,EAAIC,OAAON,MAAxB,MAIpB,EC4DD,EAjEe,WAAO,IAAD,EACnB,GAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAqB,SAAAjB,GACzBc,EAA0B,KAAVd,EAAe,CAAEkB,MAAOlB,GAAU,CAAC,EACpD,EACKmB,EAAU,UAAGN,EAAaO,IAAI,gBAApB,QAAgC,GA2BhD,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMR,EAAe,IAAIS,gBAAgB,CACvCC,QAJY,mCAKZL,MAAOC,IAGTV,EAAU,MACS,KAAfU,GAAoC,OAAfA,GACvBK,MAAM,6CAAD,OAA8CX,IAChDY,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,+DACjC,IACAN,MAAK,SAAAjB,GACJC,EAAUD,EACX,IACAwB,OAAM,SAAAtB,GACLC,EAASD,EACV,GAEN,GAAE,CAACS,IAEAX,GAEA,UAAC,KAAD,YACE,SAACT,EAAD,CAAWC,MAAOmB,EAAYlB,SAAUgB,KACxC,wBACGT,EAAOyB,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,aAAd,OAClB,UAAC,KAAD,YACE,SAAC,MAAD,KACA,UAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAMzB,GAAlC,UACGqB,EADH,KACYC,EAAaI,MAAM,EAAG,GADlC,SAFYN,EADI,UAa1B,SAAC,KAAD,UACGzB,EACCA,EAAMgC,SAEN,SAAC3C,EAAD,CAAWE,SAAUkB,EAAYwB,eAAgB1B,KAIxD,C","sources":["pages/Home/Home.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding: 10px 0 10px 0;\n  font-size: xx-large;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","export const SearchBar = ({ value, onSearch }) => {\n  return (\n    <form>\n      <p>Search movie</p>\n      <input\n        type=\"text\"\n        defaultValue={value}\n        onChange={evt => onSearch(evt.target.value)}\n      />\n    </form>\n  );\n};\n","import { Container, LiDecor } from 'pages/Home/Home.styled';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { HiFilm } from 'react-icons/hi';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const handleSearchParams = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n  const queryInput = searchParams.get('query') ?? '';\n  const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      query: queryInput,\n    });\n\n    setMovies(null);\n    if (queryInput !== '' || queryInput !== null) {\n      fetch(`https://api.themoviedb.org/3/search/movie?${searchParams}`)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject(new Error('Щось не так...'));\n        })\n        .then(movies => {\n          setMovies(movies);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }, [queryInput]);\n\n  if (movies) {\n    return (\n      <Container>\n        <SearchBar value={queryInput} onSearch={handleSearchParams} />\n        <ul>\n          {movies.results.map(({ id, title, release_date }) => (\n            <LiDecor key={id}>\n              <HiFilm />\n              <Link to={`${id}`} state={{ from: location }}>\n                {title} ({release_date.slice(0, 4)})\n              </Link>\n            </LiDecor>\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      {error ? (\n        error.message\n      ) : (\n        <SearchBar onSearch={queryInput} onSearchParams={handleSearchParams} />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","Title","LiDecor","SearchBar","value","onSearch","type","defaultValue","onChange","evt","target","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","handleSearchParams","query","queryInput","get","useEffect","URLSearchParams","api_key","fetch","then","response","ok","json","Promise","reject","Error","catch","results","map","id","title","release_date","to","state","from","slice","message","onSearchParams"],"sourceRoot":""}
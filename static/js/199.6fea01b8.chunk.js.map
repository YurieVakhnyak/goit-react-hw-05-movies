{"version":3,"file":"static/js/199.6fea01b8.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,KAAH,oGAMTC,EAAQD,EAAAA,GAAAA,GAAH,2EAKLE,EAAUF,EAAAA,GAAAA,GAAH,6E,8JCXPG,EAAUH,EAAAA,GAAAA,IAAH,mEAKPI,EAAMJ,EAAAA,GAAAA,IAAH,sFAMHK,EAAcL,EAAAA,GAAAA,IAAH,qLASXM,EAAQN,EAAAA,GAAAA,IAAH,qEAILO,EAAYP,EAAAA,GAAAA,GAAH,wDAKTQ,EAAYR,EAAAA,GAAAA,IAAH,kFAMTS,EAAST,EAAAA,GAAAA,OAAH,sMAUNU,EAAcV,EAAAA,GAAAA,GAAH,6F,SC/BT,SAASW,IAAiB,IAAD,IAC9BC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,EAASI,OAErB,IAAMC,EAAY,oBAAGL,EAASI,aAAZ,aAAG,EAAgBE,YAAnB,QAA2B,UAuB7C,IAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,6CAAyCf,EAAzC,oBAHK,oCAKdI,EAAS,MACTY,MAAMD,GACHE,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,+DACjC,IACAN,MAAK,SAAAd,GACJC,EAASD,EACV,IACAqB,OAAM,SAAAnB,GACLC,EAASD,EACV,GACJ,GAAE,CAACL,IAEAG,EAAO,CACT,IACEsB,EAMEtB,EANFsB,cACAC,EAKEvB,EALFuB,MACAC,EAIExB,EAJFwB,aACAC,EAGEzB,EAHFyB,aACAC,EAEE1B,EAFF0B,SACAC,EACE3B,EADF2B,OAEIC,EAAS,yCAAqCN,GAEpD,OACE,UAAC,KAAD,YACE,UAACjC,EAAD,YACE,UAACI,EAAD,YACE,SAAC,KAAD,CAAMoC,GAAIpB,EAAV,UACE,UAACf,EAAD,YACE,SAAC,MAAD,IADF,gBAKF,gBAAKoC,IAAKF,EAAWG,IAAKR,QAE5B,UAACnC,EAAD,YACE,SAAC,KAAD,UAAQmC,KACR,wCAAgBS,KAAKC,MAAqB,GAAfR,GAA3B,QACA,0CAAkBD,MAClB,SAAC7B,EAAD,wBACA,uBAAI+B,KACJ,SAAC/B,EAAD,sBACA,SAACH,EAAD,UACGmC,EAAOO,KAAI,gBAAGrC,EAAH,EAAGA,GAAIsC,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALtC,EADC,aAMlB,UAACP,EAAD,YACE,SAACK,EAAD,uCACA,UAACJ,EAAD,YACE,SAAC,KAAD,CAAMsC,GAAG,oBAAoBrB,MAAO,CAAEE,KAAMN,EAASI,MAAME,MAA3D,mBAGA,UAAC,KAAD,CAAMmB,GAAG,oBAAoBrB,MAAO,CAAEE,KAAMN,EAASI,MAAME,MAA3D,UACG,IADH,UAEU,cAId,SAAC,EAAA0B,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,CACD,OAAO,SAAC,KAAD,UAAYnC,EAAQA,EAAMoC,SAAU,yCAC5C,C","sources":["pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding: 10px 0 10px 0;\n  font-size: xx-large;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 2px;\n  justify-content: center;\n  align-items: center;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Container, Title } from 'pages/Home/Home.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport {\n  MediumTitle,\n  GenreList,\n  BoxInside,\n  Box,\n  Thumb,\n  InfoBox,\n  MoreInfoBox,\n  Button,\n} from './MoviesDetails.styled';\n\nexport default function MoviesDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  console.log(location.state);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\n  useEffect(() => {\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n\n    setMovie(null);\n    fetch(URL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Щось не так...'));\n      })\n      .then(movie => {\n        setMovie(movie);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [id]);\n\n  if (movie) {\n    const {\n      backdrop_path,\n      title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = movie;\n    const posterURL = `https://image.tmdb.org/t/p/w500${backdrop_path}`;\n\n    return (\n      <Container>\n        <Box>\n          <BoxInside>\n            <Link to={backLinkHref}>\n              <Button>\n                <FaLongArrowAltLeft />\n                Go back\n              </Button>\n            </Link>\n            <img src={posterURL} alt={title} />\n          </BoxInside>\n          <InfoBox>\n            <Title>{title}</Title>\n            <p>User score: {Math.floor(vote_average * 10)}%</p>\n            <p>Release date: {release_date}</p>\n            <MediumTitle>Overview</MediumTitle>\n            <p>{overview}</p>\n            <MediumTitle>Genres</MediumTitle>\n            <GenreList>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </GenreList>\n          </InfoBox>\n        </Box>\n        <MoreInfoBox>\n          <MediumTitle>Additionals information</MediumTitle>\n          <Thumb>\n            <Link to=\"get-movie-credits\" state={{ from: location.state.from }}>\n              Cast\n            </Link>\n            <Link to=\"get-movie-reviews\" state={{ from: location.state.from }}>\n              {' '}\n              Reviews{' '}\n            </Link>\n          </Thumb>\n        </MoreInfoBox>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n"],"names":["Container","styled","Title","LiDecor","InfoBox","Box","MoreInfoBox","Thumb","GenreList","BoxInside","Button","MediumTitle","MoviesDetails","id","useParams","useState","movie","setMovie","error","setError","location","useLocation","console","log","state","backLinkHref","from","useEffect","URL","fetch","then","response","ok","json","Promise","reject","Error","catch","backdrop_path","title","release_date","vote_average","overview","genres","posterURL","to","src","alt","Math","floor","map","name","Suspense","fallback","message"],"sourceRoot":""}
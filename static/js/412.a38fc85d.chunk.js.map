{"version":3,"file":"static/js/412.a38fc85d.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.styled.jsx","components/SortButtons/SortButtons.jsx","components/TrendingTitle/TrendingTitle.styled.jsx","components/TrendingTitle/TrendingTitle.jsx","pages/Home/Home.styled.jsx","pages/Person/Person.styled.jsx","components/TVShowsItem/TVShowsItem.jsx","pages/TVShows/TVShows.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  height: 25px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  font-size: medium;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(30%, -100%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  padding: 5px 0 5px 0;\n  // color: darkblue;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import { FaLongArrowAltDown, FaLongArrowAltUp } from 'react-icons/fa';\n\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\nimport { SortBox } from 'pages/Person/Person.styled';\nexport function SortButtons({\n  setFieldSorted,\n  toggleOrder,\n  fieldSorted,\n  order,\n}) {\n  const buttonClass = field => (field === fieldSorted ? 'active' : 'inactive');\n\n  return (\n    <SortBox>\n      <Button\n        className={buttonClass('Trends')}\n        onClick={() => {\n          setFieldSorted('Trends');\n        }}\n      >\n        Trends\n      </Button>\n      <Button\n        className={buttonClass('Rating')}\n        onClick={() => {\n          setFieldSorted('Rating');\n          toggleOrder();\n        }}\n      >\n        Rating\n        {fieldSorted === 'Rating' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n\n      <Button\n        className={buttonClass('Date')}\n        onClick={() => {\n          setFieldSorted('Date');\n          toggleOrder();\n        }}\n      >\n        Date\n        {fieldSorted === 'Date' &&\n          (order ? <FaLongArrowAltUp /> : <FaLongArrowAltDown />)}\n      </Button>\n      <Button\n        className={buttonClass('Title')}\n        onClick={() => {\n          setFieldSorted('Title');\n          toggleOrder();\n        }}\n      >\n        Title\n        {fieldSorted === 'Title' &&\n          (order ? <FaLongArrowAltDown /> : <FaLongArrowAltUp />)}\n      </Button>\n    </SortBox>\n  );\n}\n","import styled from 'styled-components';\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport const TitleBox = styled.div`\n  display: flex;\n  height: 50px;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 480px;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n  vertical-align: super;\n`;\nexport const ButtonThumb = styled.h1`\n  margin-top: 10px;\n`;\nexport const ButtonsChanged = styled(Button)`\n  min-width: 100px;\n  &:focus {\n    color: black;\n  }\n`;\n","import {\n  ButtonsChanged,\n  Title,\n  TitleBox,\n  ButtonThumb,\n} from './TrendingTitle.styled';\nimport { getTrendingTitle } from 'utils/functions';\n\nexport const TrendingTitle = ({ setPeriod, period, type }) => {\n  const togglePeriod = () => {\n    setPeriod(period === 'day' ? 'week' : 'day');\n  };\n  return (\n    <TitleBox>\n      <Title>{getTrendingTitle(period, type)}</Title>\n      <ButtonThumb>\n        <ButtonsChanged onClick={togglePeriod}>Timeframe</ButtonsChanged>\n      </ButtonThumb>\n    </TitleBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\nexport const TitleBox = styled.main`\n  display: flex;\n  justify-content: space-around;\n  max-width: 500px;\n  padding: 5px 0 5px 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n`;\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  text-align: center;\n\n  @media (max-width: 900px) {\n    flex-wrap: wrap;\n  }\n`;\nexport const PersonList = styled.div`\n  column-count: 1;\n  column-gap: 20px;\n\n  @media (min-width: 750px) {\n    column-count: 2;\n  }\n`;\nexport const PersonBox = styled.div`\n  max-width: 450px;\n  min-width: 300px;\n  @media (min-width: 900px) {\n    padding-top: 80px;\n  }\n`;\nexport const ButtonBox = styled.div`\n  padding: 5px;\n`;\nexport const SortBox = styled.div`\n  display: flex;\n  justify-content: left;\n  gap: 5px;\n`;\nexport const FilmBox = styled.div`\n  text-align: left;\n  min-width: 300px;\n`;\n","import {\n  LiDecor,\n  StyledLink,\n  StyledFilmIcon,\n} from 'components/MovieItem/MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\n\nexport const TVShowsItem = ({\n  movie,\n  hoveredId,\n  setHoveredId,\n  hoveredImageUrl,\n  setHoveredImageUrl,\n  location,\n}) => {\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, name, first_air_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor key={id}>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/tv-shows/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {name}, ({first_air_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={name}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchData, getTrendsUrl } from 'utils/fetchData';\nimport { getSortedFilmography } from 'utils/functions';\nimport { SortButtons } from 'components/SortButtons/SortButtons';\nimport { Container } from 'pages/Home/Home.styled';\nimport { TVShowsItem } from 'components/TVShowsItem/TVShowsItem';\nimport { TrendingTitle } from 'components/TrendingTitle/TrendingTitle';\n\nexport default function TVShows() {\n  const [trending, setTrending] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState(true);\n  const [period, setPeriod] = useState('day');\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const toggleOrder = () => {\n    setOrder(order ? false : true);\n  };\n\n  useEffect(() => {\n    const URL = getTrendsUrl('tv', period);\n    fetchData(URL, setTrending, setError);\n  }, [period]);\n\n  if (trending) {\n    const { results } = trending;\n    console.log(results);\n\n    const sortedFilmography = getSortedFilmography(fieldSorted, results, order);\n\n    return (\n      <Container>\n        <SortButtons\n          setFieldSorted={setFieldSorted}\n          toggleOrder={toggleOrder}\n          fieldSorted={fieldSorted}\n          order={order}\n        />\n        <TrendingTitle setPeriod={setPeriod} period={period} type={'tv'} />\n        <ul>\n          {sortedFilmography.map(movie => (\n            <TVShowsItem\n              key={movie.id}\n              movie={movie}\n              hoveredId={hoveredId}\n              setHoveredId={setHoveredId}\n              hoveredImageUrl={hoveredImageUrl}\n              setHoveredImageUrl={setHoveredImageUrl}\n              location={location}\n            />\n          ))}\n        </ul>\n      </Container>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","// export const API_KEY = 'b30750fbe582936755a0930282f9befd';\nexport const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import {\n  searchParams,\n  basicURL,\n  basicSmallImageURL,\n  basicBigImageURL,\n} from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(profilePath, small = false) {\n  if (profilePath) {\n    return small\n      ? basicSmallImageURL + profilePath\n      : basicBigImageURL + profilePath;\n  } else {\n    return hasNotPhotoPerson;\n  }\n}\n\nexport function getExtraInfoUrl(id, type, dataType) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const dataAltType = dataType === 'cast' ? 'credits' : 'reviews';\n  const URL = `${basicURL}/${mediaType}/${id}/${dataAltType}?${searchParams}`;\n  return URL;\n}\nexport function getTrendsUrl(type, period) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const URL = `${basicURL}/trending/${mediaType}/${period}?${searchParams}`;\n  return URL;\n}\n","export function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, cast, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = cast;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(cast);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(cast);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n\n    default:\n      sortedFilmography = cast;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n\nexport const getTrendingTitle = (period, type) => {\n  const mediaType = type === 'tv' ? 'TV Shows' : 'Movies';\n  const timePeriod = period === 'week' ? 'week' : 'today';\n  return `${mediaType} trending ${timePeriod}`;\n};\n"],"names":["Button","styled","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","StyledLink","Link","StyledFilmIcon","HiFilm","LiDecor","SortButtons","setFieldSorted","toggleOrder","fieldSorted","order","buttonClass","field","className","onClick","TitleBox","Title","ButtonThumb","ButtonsChanged","TrendingTitle","setPeriod","period","type","getTrendingTitle","Container","PersonContainer","PersonList","PersonBox","ButtonBox","SortBox","FilmBox","TVShowsItem","movie","hoveredId","setHoveredId","setHoveredImageUrl","location","id","name","first_air_date","vote_average","backdrop_path","to","state","from","onMouseEnter","imageUrl","fetchImage","handleMouseEnter","onMouseLeave","slice","voteToPersent","TVShows","useState","trending","setTrending","setOrder","error","setError","useLocation","useEffect","URL","getTrendsUrl","fetchData","results","console","log","sortedFilmography","getSortedFilmography","map","message","API_KEY","process","searchParams","URLSearchParams","api_key","basicURL","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","getImageUrl","profilePath","small","hasNotPhotoPerson","getExtraInfoUrl","dataType","mediaType","dataAltType","vote","persentVote","Math","floor","formateDate","date","Date","toUTCString","sortByField","arr","direction","sort","a","b","makeNewArray","item","cast","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push","timePeriod"],"sourceRoot":""}
{"version":3,"file":"static/js/610.20b3689f.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.jsx","components/BackLinkButton/BackLinkButton.styled.jsx","pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/Person/Person.styled.jsx","pages/Person/Person.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Button } from './BackLinkButton.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nexport const BackLinkButton = ({ backLinkHref }) => {\n  return (\n    <Link to={backLinkHref}>\n      <Button>\n        <FaLongArrowAltLeft />\n        Go back\n      </Button>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 2px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding: 10px 0 10px 0;\n  font-size: xx-large;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n\nexport const ButtonsThumb = styled.div`\n  display: flex;\n  gap: 15px;\n  margin: 0 0 10px 5px;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const ImageFilm = styled.img`\n  @media (max-width: 500px) {\n    width: 400px;\n  }\n  @media (max-width: 400px) {\n    width: 350px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  text-align: center;\n\n  @media (max-width: 900px) {\n    flex-wrap: wrap;\n  }\n`;\nexport const PersonList = styled.div`\n  column-count: 1;\n  column-gap: 20px;\n\n  @media (min-width: 750px) {\n    column-count: 2;\n  }\n`;\nexport const PersonBox = styled.div`\n  max-width: 450px;\n  min-width: 300px;\n  @media (min-width: 750px) {\n    padding-top: 50px;\n  }\n`;\nexport const ButtonBox = styled.div`\n  padding: 5px;\n`;\nexport const SortBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n`;\nexport const FilmBox = styled.div`\n  text-align: left;\n  min-width: 300px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { RiArrowUpDownFill } from 'react-icons/ri';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BackLinkButton } from 'components/BackLinkButton/BackLinkButton';\nimport { Container, LiDecor, Title } from 'pages/Home/Home.styled';\nimport { MediumTitle } from 'pages/MoviesDetails/MoviesDetails.styled';\nimport {\n  PersonContainer,\n  FilmBox,\n  PersonBox,\n  PersonList,\n  ButtonBox,\n  SortBox,\n} from './Person.styled';\nimport {\n  sortByField,\n  makeWithoutLowVotes,\n  formateDate,\n  voteToPersent,\n} from 'utils/functions';\nimport { HiFilm } from 'react-icons/hi';\nimport { fetchData } from 'utils/fetchData';\nimport { searchParams, basicURL, basicBigImageURL } from 'utils/constants';\nimport hasNotPhotoImage from '../../components/MovieCast/NoPhoto.png';\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport default function Person() {\n  const [person, setPerson] = useState(null);\n  const [personMoovies, setPersonMoovies] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState('desc');\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  let sortedFilmography;\n\n  const toggleOrder = () => {\n    setOrder(order === 'asc' ? 'desc' : 'asc');\n  };\n\n  const backLinkHref = location.state?.from ?? '/';\n  // console.log(backLinkHref);\n\n  useEffect(() => {\n    const URL = `${basicURL}/person/${id}/movie_credits?${searchParams}`;\n    const personURL = `${basicURL}/person/${id}?${searchParams}`;\n\n    fetchData(URL, setPersonMoovies, setError);\n    fetchData(personURL, setPerson, setError);\n  }, [id]);\n\n  if (personMoovies && person) {\n    const { cast } = personMoovies;\n    switch (fieldSorted) {\n      case 'vote':\n        const withoutLowVotes = makeWithoutLowVotes(cast);\n        console.log(withoutLowVotes);\n\n        sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n\n        break;\n      case 'date':\n        sortedFilmography = sortByField(cast, 'release_date', order);\n        break;\n      case 'title':\n        sortedFilmography = sortByField(cast, 'title', order);\n\n        break;\n      default:\n        sortedFilmography = personMoovies.cast;\n    }\n\n    const { name, profile_path, birthday, deathday } = person;\n\n    const formattedBirthday = formateDate(birthday);\n    const formattedDeathday = formateDate(deathday);\n\n    return (\n      <div>\n        <ButtonBox>\n          <BackLinkButton backLinkHref={backLinkHref} />\n        </ButtonBox>\n        <PersonContainer>\n          <PersonBox>\n            <img\n              src={\n                profile_path\n                  ? basicBigImageURL + profile_path\n                  : hasNotPhotoImage\n              }\n              alt={name}\n              height={281}\n            />\n            {<Title>{name}</Title>}\n            <MediumTitle>\n              {deathday\n                ? `(${formattedBirthday} - ${formattedDeathday})`\n                : `(${formattedBirthday})`}\n            </MediumTitle>\n          </PersonBox>\n          <FilmBox>\n            <SortBox>\n              <p style={{ marginRight: '10px' }}>Sort by:</p>\n              <Button onClick={() => setFieldSorted('vote')}>Rating</Button>\n              <Button onClick={() => setFieldSorted('date')}>Date</Button>\n              <Button onClick={() => setFieldSorted('title')}>Title</Button>\n              <Button onClick={toggleOrder}>\n                Order\n                <RiArrowUpDownFill />\n              </Button>\n            </SortBox>\n            <MediumTitle style={{ textAlign: 'center', marginBottom: '20px' }}>\n              Filmography\n            </MediumTitle>\n\n            <PersonList>\n              {sortedFilmography.map(\n                ({ id, title, release_date, vote_average }) => (\n                  <LiDecor key={id}>\n                    <HiFilm />\n                    <Link to={`/movies/${id}`} state={{ from: location }}>\n                      {title}, ({release_date?.slice(0, 4) || 'no data'}),{' '}\n                      {voteToPersent(vote_average)}\n                    </Link>\n                  </LiDecor>\n                )\n              )}\n            </PersonList>\n          </FilmBox>\n        </PersonContainer>\n      </div>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","export const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","export function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n","export function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return 'no data';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = 'desc') {\n  const direction = order === 'asc' ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return order === 'asc' ? 'desc' : 'asc';\n}\n"],"names":["BackLinkButton","backLinkHref","to","Button","styled","Container","Title","LiDecor","ButtonsThumb","InfoBox","Box","MoreInfoBox","ImageFilm","Thumb","GenreList","BoxInside","MediumTitle","PersonContainer","PersonList","PersonBox","ButtonBox","SortBox","FilmBox","Person","sortedFilmography","useState","person","setPerson","personMoovies","setPersonMoovies","fieldSorted","setFieldSorted","order","setOrder","error","setError","id","useParams","location","useLocation","state","from","useEffect","URL","basicURL","searchParams","personURL","fetchData","cast","withoutLowVotes","makeWithoutLowVotes","console","log","sortByField","name","profile_path","birthday","deathday","formattedBirthday","formateDate","formattedDeathday","src","basicBigImageURL","hasNotPhotoImage","alt","height","style","marginRight","onClick","textAlign","marginBottom","map","title","release_date","vote_average","slice","voteToPersent","message","API_KEY","URLSearchParams","api_key","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","vote","persentVote","Math","floor","date","Date","toUTCString","arr","field","direction","sort","a","b","item","vote_count"],"sourceRoot":""}
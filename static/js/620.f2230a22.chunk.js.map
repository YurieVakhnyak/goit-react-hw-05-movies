{"version":3,"file":"static/js/620.f2230a22.chunk.js","mappings":"iRAOe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAOjB,IALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAG,UAAMC,EAAAA,GAAN,kBAAwBN,EAAxB,oBAAsCO,EAAAA,KAC/CC,EAAAA,EAAAA,GAAUH,EAAKR,EAAcE,EAC9B,GAAE,CAACC,IAEAJ,EAAW,CACb,IAAQa,EAASb,EAATa,KAER,OACE,0BACE,SAAC,KAAD,UACGA,EAAKC,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAad,GAAMe,MAAO,CAAEC,KAAMd,GAA1C,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEe,IACEL,EACIM,EAAAA,GAAqBN,EACrBO,EAENC,IAAKT,KAEP,uBAAIA,KACJ,UAAC,KAAD,yBAC4B,KAAdE,EAAmBA,EAAY,sBAb1Cb,EADD,OAuBjB,CACD,OAAO,yBAAMF,EAAQA,EAAMuB,SAAU,yCACtC,C,+JC/CYC,EAAWC,EAAAA,GAAAA,GAAH,8DAKRC,EAAOD,EAAAA,GAAAA,EAAH,6CAIJE,EAAQF,EAAAA,GAAAA,IAAH,2DAKLG,EAAOH,EAAAA,GAAAA,IAAH,2K,wJChBV,IAAMI,EAAU,mCAEVpB,EAAe,IAAIqB,gBAAgB,CAC9CC,QAASF,IAGErB,EAAW,+BAEXwB,EAAmB,kCAEnBZ,EAAqB,iC,uBCV3B,SAASV,EAAUuB,EAAKC,EAASjC,GACtCkC,MAAMF,GACHG,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,4BACjC,IACAN,MAAK,SAAAO,GACJT,EAAQS,EACT,IACAC,OAAM,SAAA5C,GACLC,EAASD,EACV,GACJ,C","sources":["components/MovieCast/MovieCast.jsx","components/MovieCast/MovieCast.styled.jsx","utils/constants.js","utils/fetchData.js"],"sourcesContent":["import { useParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Text, Card, CastList, Image } from './MovieCast.styled';\nimport { fetchData } from 'utils/fetchData';\nimport { searchParams, basicURL, basicSmallImageURL } from 'utils/constants';\nimport hasNotPhotoImage from './NoPhoto.png';\n\nexport default function MovieCast() {\n  const [movieCast, setMovieCast] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const URL = `${basicURL}/movie/${id}/credits?${searchParams}`;\n    fetchData(URL, setMovieCast, setError);\n  }, [id]);\n\n  if (movieCast) {\n    const { cast } = movieCast;\n\n    return (\n      <div>\n        <CastList>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <Link to={`/person/${id}`} state={{ from: location }}>\n                <Card>\n                  <Image\n                    src={\n                      profile_path\n                        ? basicSmallImageURL + profile_path\n                        : hasNotPhotoImage\n                    }\n                    alt={name}\n                  />\n                  <p>{name}</p>\n                  <Text>\n                    Character: {character !== '' ? character : 'No results'}\n                  </Text>\n                </Card>\n              </Link>\n            </li>\n          ))}\n        </CastList>\n      </div>\n    );\n  }\n  return <div>{error ? error.message : <p>Searching...</p>}</div>;\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Text = styled.p`\n  font-size: small;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  font-weight: 500;\n  width: 150px;\n  height: 200px;\n`;\n","export const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","export function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n"],"names":["MovieCast","useState","movieCast","setMovieCast","error","setError","id","useParams","location","useLocation","useEffect","URL","basicURL","searchParams","fetchData","cast","map","name","profile_path","character","to","state","from","src","basicSmallImageURL","hasNotPhotoImage","alt","message","CastList","styled","Text","Image","Card","API_KEY","URLSearchParams","api_key","basicBigImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch"],"sourceRoot":""}
{"version":3,"file":"static/js/610.580fb0dc.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/Person/Person.styled.jsx","pages/Person/Person.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const Title = styled.h1`\n  padding: 10px 0 10px 0;\n  font-size: xx-large;\n`;\n\nexport const LiDecor = styled.li`\n  display: flex;\n  align-items: start;\n  gap: 5px;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 2px;\n  justify-content: center;\n  align-items: center;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  &: hover {\n    cursor: pointer;\n  }\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-left: 20px;\n  text-align: center;\n  gap: 30px;\n\n  //   background-color: darkcyan;\n\n  //   height: 40px;\n  //   padding-left: 20px;\n  //   font-size: x-large;\n  //   align-items: center;\n`;\nexport const PersonList = styled.div`\n  column-count: 2;\n  column-gap: 20px;\n`;\nexport const PersonBox = styled.div`\n  // outline: 2px solid tomato;\n  max-width: 450px;\n  min-width: 300px;\n`;\nexport const ButtonBox = styled.div`\n  //   outline: 2px solid tomato;\n  padding: 5px;\n`;\nexport const FilmBox = styled.div`\n  //   outline: 2px solid tomato;\n  text-align: left;\n  max-width: 800px;\n  min-width: 450px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, LiDecor, Title } from 'pages/Home/Home.styled';\nimport { Button, MediumTitle } from 'pages/MoviesDetails/MoviesDetails.styled';\nimport {\n  PersonContainer,\n  FilmBox,\n  PersonBox,\n  PersonList,\n  ButtonBox,\n} from './Person.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { HiFilm } from 'react-icons/hi';\nimport hasNotPhotoImage from '../../components/MovieCast/NoPhoto.png';\n\nexport default function Person() {\n  const [person, setPerson] = useState(null);\n  const [personMoovies, setPersonMoovies] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  // const navigate = useNavigate();\n\n  const backLinkHref = location.state?.from ?? '/';\n  console.log(backLinkHref);\n\n  // const goBack = () => {\n  //   navigate(-1);\n  // };\n\n  const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\n  useEffect(() => {\n    const URL = `https://api.themoviedb.org/3/person/${id}/movie_credits?api_key=${API_KEY}`;\n    const personURL = `https://api.themoviedb.org/3/person/${id}?api_key=${API_KEY}`;\n\n    setPerson(null);\n    setPersonMoovies(null);\n\n    fetch(personURL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Щось не так...'));\n      })\n      .then(person => {\n        setPerson(person);\n      })\n      .catch(error => {\n        setError(error);\n      });\n\n    fetch(URL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Щось не так...'));\n      })\n      .then(personMoovies => {\n        setPersonMoovies(personMoovies);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [id]);\n\n  if (personMoovies && person) {\n    const basicImageURL = `https://image.tmdb.org/t/p/w500`;\n    const { name, profile_path, birthday, deathday } = person;\n\n    const formatteDate = dateValue => {\n      if (dateValue) {\n        const date = new Date(dateValue);\n        return date.toUTCString().slice(5, 16);\n      }\n      return ' - - - ';\n    };\n    const formattedBirthday = formatteDate(birthday);\n    const formattedDeathday = formatteDate(deathday);\n\n    return (\n      <div>\n        <ButtonBox>\n          <Link to={backLinkHref}>\n            <Button\n            // onClick={goBack}\n            >\n              <FaLongArrowAltLeft />\n              Go back\n            </Button>\n          </Link>\n        </ButtonBox>\n        <PersonContainer>\n          <PersonBox>\n            <img\n              src={\n                profile_path ? basicImageURL + profile_path : hasNotPhotoImage\n              }\n              alt={name}\n              height={281}\n            />\n            {<Title>{name}</Title>}\n            <MediumTitle>\n              {deathday\n                ? `(${formattedBirthday} - ${formattedDeathday})`\n                : `(${formattedBirthday})`}\n            </MediumTitle>\n          </PersonBox>\n          <FilmBox>\n            <MediumTitle style={{ textAlign: 'center', marginBottom: '20px' }}>\n              Filmography\n            </MediumTitle>\n            <PersonList>\n              {personMoovies.cast.map(({ id, title, release_date }) => (\n                <LiDecor key={id}>\n                  <HiFilm />\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title} ({release_date?.slice(0, 4) ?? '- - - -'})\n                  </Link>\n                </LiDecor>\n              ))}\n            </PersonList>\n          </FilmBox>\n        </PersonContainer>\n      </div>\n    );\n  }\n\n  <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n"],"names":["Container","styled","Title","LiDecor","InfoBox","Box","MoreInfoBox","Thumb","GenreList","BoxInside","Button","MediumTitle","PersonContainer","PersonList","PersonBox","ButtonBox","FilmBox","Person","useState","person","setPerson","personMoovies","setPersonMoovies","error","setError","id","useParams","location","useLocation","backLinkHref","state","from","console","log","API_KEY","useEffect","URL","personURL","fetch","then","response","ok","json","Promise","reject","Error","catch","name","profile_path","birthday","deathday","formatteDate","dateValue","Date","toUTCString","slice","formattedBirthday","formattedDeathday","to","src","hasNotPhotoImage","alt","height","style","textAlign","marginBottom","cast","map","title","release_date","message"],"sourceRoot":""}
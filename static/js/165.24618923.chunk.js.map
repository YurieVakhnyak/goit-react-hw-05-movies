{"version":3,"file":"static/js/165.24618923.chunk.js","mappings":"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","sources":["components/BackLinkButton/BackLinkButton.jsx","components/BackLinkButton/BackLinkButton.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SortButtons/SortButtons.styled.jsx","components/SortButtons/SortButtons.jsx","pages/Home/Home.styled.jsx","pages/MoviesDetails/MoviesDetails.styled.jsx","pages/PersonDetails/PersonDetails.styled.jsx","pages/PersonDetails/PersonDetails.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Button } from './BackLinkButton.styled';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nexport const BackLinkButton = ({ backLinkHref }) => {\n  return (\n    <Link to={backLinkHref}>\n      <Button>\n        <FaLongArrowAltLeft />\n        Go back\n      </Button>\n    </Link>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 7px;\n  justify-content: center;\n  align-items: center;\n  min-width: 90px;\n  height: 25px;\n  background-color: lightseagreen;\n  border-radius: 5px;\n  border-color: lightseagreen;\n  font-size: medium;\n  &: hover {\n    cursor: pointer;\n    color: darkblue;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalThumb = styled.div`\n  position: absolute;\n  width: 250px;\n  transform: translate(50%, -117%);\n  z-index: 99;\n  background-color: cadetblue;\n  color: white;\n`;\n\nexport const ModalText = styled.p`\n  font-size: small;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  /* Альтернативні стилі */\n  display: -moz-box;\n  -moz-box-orient: vertical;\n  -moz-box-lines: 3;\n`;\nexport const ImageStyled = styled.img`\n  width: 220px;\n  height: 110px;\n`;\n","import { ModalThumb, ModalText, ImageStyled } from './Modal.styled';\nimport hasNotPosterImage from '../../images/NoFilmImage.png';\n\nexport function Modal({ hoveredImageUrl, title, overview }) {\n  return (\n    <ModalThumb>\n      <ImageStyled\n        src={hoveredImageUrl}\n        alt={title}\n        onError={e => {\n          e.target.onerror = null;\n          e.target.src = hasNotPosterImage;\n        }}\n      />\n      <ModalText>{overview}</ModalText>\n    </ModalThumb>\n  );\n}\n","import styled from 'styled-components';\nimport { HiFilm } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  padding: 5px;\n  position: relative;\n  vertical-align: middle;\n`;\nexport const StyledFilmIcon = styled(HiFilm)`\n  vertical-align: middle;\n`;\n\nexport const LiDecor = styled.li`\n  min-height: 30px;\n`;\n","import { LiDecor, StyledLink, StyledFilmIcon } from './MovieItem.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { fetchImage } from 'utils/fetchData';\nimport { voteToPersent } from 'utils/functions';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieItem = ({ movie, index }) => {\n  const [hoveredId, setHoveredId] = useState(null);\n  const [hoveredImageUrl, setHoveredImageUrl] = useState(null);\n  const location = useLocation();\n\n  const handleMouseEnter = (id, imageUrl) => {\n    setHoveredId(id);\n    fetchImage(imageUrl, setHoveredImageUrl);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredId(null);\n  };\n\n  const { id, title, release_date, overview, vote_average, backdrop_path } =\n    movie;\n  return (\n    <LiDecor>\n      <StyledFilmIcon />\n      <StyledLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        onMouseEnter={() => handleMouseEnter(id, backdrop_path)}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        {index + 1}. {title}, ({release_date?.slice(0, 4) || 'no data'}),{' '}\n        {voteToPersent(vote_average)}\n      </StyledLink>\n\n      {hoveredId === id && hoveredImageUrl && (\n        <Modal\n          hoveredImageUrl={hoveredImageUrl}\n          title={title}\n          overview={overview}\n        />\n      )}\n    </LiDecor>\n  );\n};\n","import { MovieItem } from 'components/MovieItem/MovieItem';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map((movie, index) => (\n        <MovieItem key={movie.id} movie={movie} index={index} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { FaLongArrowAltDown, FaLongArrowAltUp } from 'react-icons/fa';\n\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport const SortBox = styled.div`\n  display: flex;\n  gap: 10px;\n\n  @media (max-width: 430px) {\n    gap: 10px;\n    margin-bottom: 5px;\n  }\n`;\nexport const SortStyledButton = styled(Button)`\n  position: relative;\n  @media (max-width: 430px) {\n    min-width: 80px;\n  }\n`;\nexport const StyledFaLongArrowAltDown = styled(FaLongArrowAltDown)`\n  position: absolute;\n right: 5%;\n  }\n`;\nexport const StyledFaLongArrowAltUp = styled(FaLongArrowAltUp)`\n  position: absolute; \n  right: 5%;\n  }\n`;\n","import {\n  StyledFaLongArrowAltDown,\n  StyledFaLongArrowAltUp,\n} from './SortButtons.styled';\n\nimport { SortBox, SortStyledButton } from './SortButtons.styled';\nexport function SortButtons({ sortProps }) {\n  const { type, setFieldSorted, toggleOrder, fieldSorted, order } = sortProps;\n  const buttonClass = field => (field === fieldSorted ? 'active' : 'inactive');\n\n  return (\n    <SortBox>\n      <SortStyledButton\n        className={buttonClass('Trends')}\n        onClick={() => {\n          setFieldSorted('Trends');\n        }}\n      >\n        Trends\n      </SortStyledButton>\n      <SortStyledButton\n        className={buttonClass('Rating')}\n        onClick={() => {\n          setFieldSorted('Rating');\n          toggleOrder();\n        }}\n      >\n        Rating\n        {fieldSorted === 'Rating' &&\n          (order ? <StyledFaLongArrowAltDown /> : <StyledFaLongArrowAltUp />)}\n      </SortStyledButton>\n\n      <SortStyledButton\n        className={buttonClass('Date')}\n        onClick={() => {\n          setFieldSorted(type === 'tv' ? 'AirDate' : 'Date');\n          toggleOrder();\n        }}\n      >\n        Date\n        {(fieldSorted === 'Date' || fieldSorted === 'AirDate') &&\n          (order ? <StyledFaLongArrowAltDown /> : <StyledFaLongArrowAltUp />)}\n      </SortStyledButton>\n      <SortStyledButton\n        className={buttonClass('Title')}\n        onClick={() => {\n          setFieldSorted(type === 'tv' ? 'Name' : 'Title');\n          toggleOrder();\n        }}\n      >\n        Title\n        {(fieldSorted === 'Title' || fieldSorted === 'Name') &&\n          (order ? <StyledFaLongArrowAltUp /> : <StyledFaLongArrowAltDown />)}\n      </SortStyledButton>\n    </SortBox>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const SortThumb = styled.div`\n  padding-top: 10px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  max-width: 500px;\n  padding: 5px 0 5px 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n`;\n","import styled from 'styled-components';\n\nexport const InfoBox = styled.div`\n  max-width: 500px;\n  margin-left: 20px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-bottom: 5px;\n`;\n\nexport const MoreInfoBox = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n  background-color: lightseagreen;\n  padding: 5px 0 10px 20px;\n`;\n\nexport const ImageFilm = styled.img`\n  @media (max-width: 500px) {\n    width: 400px;\n  }\n  @media (max-width: 400px) {\n    width: 350px;\n  }\n`;\n\nexport const Thumb = styled.div`\n  display: flex;\n  gap: 50px;\n`;\nexport const GenreList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n`;\n\nexport const BoxInside = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MediumTitle = styled.h2`\n  padding-left: 0px;\n  margin: 7px 0 7px 0;\n  font-size: x-large;\n`;\n","import styled from 'styled-components';\n\nexport const PersonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-left: 20px;\n  text-align: center;\n\n  @media (max-width: 900px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const PersonBox = styled.div`\n  max-width: 450px;\n  min-width: 300px;\n  @media (min-width: 900px) {\n    padding-top: 80px;\n  }\n`;\nexport const ButtonBox = styled.div`\n  padding: 5px;\n`;\n\nexport const FilmBox = styled.div`\n  text-align: left;\n  min-width: 300px;\n`;\nexport const PersonSortBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { BackLinkButton } from 'components/BackLinkButton/BackLinkButton';\nimport { Container, Title } from 'pages/Home/Home.styled';\nimport { MediumTitle } from 'pages/MoviesDetails/MoviesDetails.styled';\nimport {\n  PersonContainer,\n  FilmBox,\n  PersonBox,\n  PersonSortBox,\n  ButtonBox,\n} from './PersonDetails.styled';\n\nimport { MoviesList } from 'components/MovieList/MovieList';\nimport { fetchData, getImageUrl } from 'utils/fetchData';\nimport { getSortedFilmography, formateDate } from 'utils/functions';\nimport { searchParams, basicURL } from 'utils/constants';\nimport { SortButtons } from 'components/SortButtons/SortButtons';\n\nexport default function Person() {\n  const [person, setPerson] = useState(null);\n  const [personMoovies, setPersonMoovies] = useState(null);\n  const [fieldSorted, setFieldSorted] = useState(null);\n  const [order, setOrder] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const { id } = useParams();\n\n  const toggleOrder = () => {\n    setOrder(order ? false : true);\n  };\n\n  const backLinkHref = location.state?.from ?? '/';\n  // console.log(backLinkHref);\n\n  useEffect(() => {\n    const URL = `${basicURL}/person/${id}/movie_credits?${searchParams}`;\n    const personURL = `${basicURL}/person/${id}?${searchParams}`;\n\n    fetchData(URL, setPersonMoovies, setError);\n    fetchData(personURL, setPerson, setError);\n  }, [id]);\n\n  const type = 'movie';\n\n  if (personMoovies && person) {\n    const { cast } = personMoovies;\n    const sortProps = { type, setFieldSorted, fieldSorted, toggleOrder, order };\n    const sortedFilmography = getSortedFilmography(fieldSorted, cast, order);\n    const { name, profile_path, birthday, deathday } = person;\n\n    const formattedBirthday = formateDate(birthday);\n    const formattedDeathday = formateDate(deathday);\n\n    return (\n      <div>\n        <ButtonBox>\n          <BackLinkButton backLinkHref={backLinkHref} />\n        </ButtonBox>\n\n        <PersonContainer>\n          <PersonBox>\n            <img src={getImageUrl(profile_path)} alt={name} height={281} />\n            {<Title>{name}</Title>}\n            <MediumTitle>\n              {deathday\n                ? `(${formattedBirthday} - ${formattedDeathday})`\n                : `(${formattedBirthday})`}\n            </MediumTitle>\n          </PersonBox>\n\n          <FilmBox>\n            <PersonSortBox>\n              <SortButtons sortProps={sortProps} />\n            </PersonSortBox>\n            <MediumTitle style={{ textAlign: 'center', marginBottom: '20px' }}>\n              Filmography\n            </MediumTitle>\n            <MoviesList movies={sortedFilmography} />\n          </FilmBox>\n        </PersonContainer>\n      </div>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","export const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en',\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import {\n  searchParams,\n  basicURL,\n  basicSmallImageURL,\n  basicBigImageURL,\n} from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\nimport hasNotFilmImage from '../images/NoFilmImage.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(imagePath, small = false, type = 'person') {\n  if (imagePath) {\n    return small\n      ? basicSmallImageURL + imagePath\n      : basicBigImageURL + imagePath;\n  } else {\n    return type === 'person' ? hasNotPhotoPerson : hasNotFilmImage;\n  }\n}\n\nexport function getExtraInfoUrl(id, type, dataType) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const dataAltType = dataType === 'cast' ? 'credits' : 'reviews';\n  const URL = `${basicURL}/${mediaType}/${id}/${dataAltType}?${searchParams}`;\n  return URL;\n}\n\nexport function getTrendsUrl(type, period, language = 'en') {\n  const newSearchParams = new URLSearchParams(searchParams);\n  newSearchParams.set('language', language);\n  const mediaType =\n    type === 'tv' ? 'tv' : type === 'person' ? 'person' : 'movie';\n  const URL = `${basicURL}/trending/${mediaType}/${period}?${newSearchParams}`;\n  return URL;\n}\n","import { Fragment } from 'react';\n\nexport function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, list, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = list;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(list);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'AirDate':\n      const newArrayByAirDate = makeNewArray(list);\n      sortedFilmography = sortByField(\n        newArrayByAirDate,\n        'first_air_date',\n        order\n      );\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n    case 'Name':\n      const newArrayByName = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByName, 'name', order);\n      break;\n\n    default:\n      sortedFilmography = list;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n\nexport const getTrendingTitle = (period, type) => {\n  let mediaType;\n\n  switch (type) {\n    case 'tv':\n      mediaType = 'TV Shows';\n      break;\n    case 'movie':\n      mediaType = 'Movies';\n      break;\n    case 'person':\n      mediaType = 'People';\n      break;\n    default:\n      mediaType = 'Movies';\n  }\n\n  const timePeriod = period === 'week' ? 'week' : 'today';\n  // return `${mediaType} trending <span>${timePeriod}</span>`;\n  return (\n    <Fragment>\n      {`${mediaType} trending `}\n      <span>{timePeriod}</span>\n    </Fragment>\n  );\n};\n\nvar countries = require('i18n-iso-countries');\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\nexport function getCountryName(code, language = 'en') {\n  return countries.getName(code, language);\n}\n"],"names":["BackLinkButton","backLinkHref","to","Button","styled","ModalThumb","ModalText","ImageStyled","Modal","hoveredImageUrl","title","overview","src","alt","onError","e","target","onerror","hasNotPosterImage","StyledLink","Link","StyledFilmIcon","HiFilm","LiDecor","MovieItem","movie","index","useState","hoveredId","setHoveredId","setHoveredImageUrl","location","useLocation","id","release_date","vote_average","backdrop_path","state","from","onMouseEnter","imageUrl","fetchImage","handleMouseEnter","onMouseLeave","slice","voteToPersent","MoviesList","movies","map","SortBox","SortStyledButton","StyledFaLongArrowAltDown","FaLongArrowAltDown","StyledFaLongArrowAltUp","FaLongArrowAltUp","SortButtons","sortProps","type","setFieldSorted","toggleOrder","fieldSorted","order","buttonClass","field","className","onClick","Container","SortThumb","Title","InfoBox","Box","MoreInfoBox","ImageFilm","Thumb","GenreList","BoxInside","MediumTitle","PersonContainer","PersonBox","ButtonBox","FilmBox","PersonSortBox","Person","person","setPerson","personMoovies","setPersonMoovies","setOrder","error","setError","useParams","useEffect","URL","basicURL","searchParams","personURL","fetchData","cast","sortedFilmography","getSortedFilmography","name","profile_path","birthday","deathday","formattedBirthday","formateDate","formattedDeathday","getImageUrl","height","style","textAlign","marginBottom","message","API_KEY","process","URLSearchParams","api_key","language","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchUrl","blob","createObjectURL","console","imagePath","small","hasNotPhotoPerson","hasNotFilmImage","getExtraInfoUrl","dataType","mediaType","dataAltType","getTrendsUrl","period","newSearchParams","set","vote","persentVote","Math","floor","date","Date","toUTCString","sortByField","arr","direction","sort","a","b","makeNewArray","item","list","vote_count","removeDuplicates","uniqueArr","forEach","author","content","find","push","getTrendingTitle","timePeriod","Fragment","countries","require","getCountryName","code","getName","registerLocale"],"sourceRoot":""}
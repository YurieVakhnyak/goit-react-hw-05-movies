{"version":3,"file":"static/js/620.0cddbe17.chunk.js","mappings":"6PAKe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MA2BjB,IAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAJY,qCAORC,EAAG,6CAAyCR,EAAzC,oBAAuDK,GAEhER,EAAa,MACbY,MAAMD,GACHE,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,yBACjC,IACAN,MAAK,SAAAd,GACJC,EAAaD,EACd,IACAqB,OAAM,SAAAnB,GACLC,EAASD,EACV,GACJ,GAAE,CAACE,IAEAJ,EAAW,CACb,IAAQsB,EAAStB,EAATsB,KAGR,OACE,0BACE,SAAC,KAAD,UACGA,EAAKC,KAAI,gBAAGnB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAavB,GAAMwB,MAAO,CAAEC,KAAMvB,GAA1C,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACEwB,IACEL,EAXI,kCAYgBA,EAChBM,EAENC,IAAKR,KAEP,uBAAIA,KACJ,UAAC,KAAD,yBAC4B,KAAdE,EAAmBA,EAAY,sBAb1CtB,EADD,OAuBjB,CACD,OAAO,yBAAMF,EAAQA,EAAM+B,SAAU,yCACtC,C,+JClEYC,EAAWC,EAAAA,GAAAA,GAAH,8DAKRC,EAAOD,EAAAA,GAAAA,EAAH,6CAIJE,EAAQF,EAAAA,GAAAA,IAAH,2DAKLG,EAAOH,EAAAA,GAAAA,IAAH,2K","sources":["components/MovieCast/MovieCast.jsx","components/MovieCast/MovieCast.styled.jsx"],"sourcesContent":["import { useParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Text, Card, CastList, Image } from './MovieCast.styled';\nimport hasNotPhotoImage from './NoPhoto.png';\n\nexport default function MovieCast() {\n  const [movieCast, setMovieCast] = useState(null);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?${searchParams}`;\n\n    setMovieCast(null);\n    fetch(URL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Something happened...'));\n      })\n      .then(movieCast => {\n        setMovieCast(movieCast);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [id]);\n\n  if (movieCast) {\n    const { cast } = movieCast;\n    const basicImageURL = 'https://image.tmdb.org/t/p/w200';\n\n    return (\n      <div>\n        <CastList>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <li key={id}>\n              <Link to={`/person/${id}`} state={{ from: location }}>\n                <Card>\n                  <Image\n                    src={\n                      profile_path\n                        ? basicImageURL + profile_path\n                        : hasNotPhotoImage\n                    }\n                    alt={name}\n                  />\n                  <p>{name}</p>\n                  <Text>\n                    Character: {character !== '' ? character : 'No results'}\n                  </Text>\n                </Card>\n              </Link>\n            </li>\n          ))}\n        </CastList>\n      </div>\n    );\n  }\n  return <div>{error ? error.message : <p>Searching...</p>}</div>;\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Text = styled.p`\n  font-size: small;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  font-weight: 500;\n  width: 150px;\n  height: 200px;\n`;\n"],"names":["MovieCast","useState","movieCast","setMovieCast","error","setError","id","useParams","location","useLocation","useEffect","searchParams","URLSearchParams","api_key","URL","fetch","then","response","ok","json","Promise","reject","Error","catch","cast","map","name","profile_path","character","to","state","from","src","hasNotPhotoImage","alt","message","CastList","styled","Text","Image","Card"],"sourceRoot":""}
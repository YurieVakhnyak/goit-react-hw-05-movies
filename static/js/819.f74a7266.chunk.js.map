{"version":3,"file":"static/js/819.f74a7266.chunk.js","mappings":"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","sources":["components/TrendingTitle/TrendingTitle.styled.jsx","components/TrendingTitle/TrendingTitle.jsx","pages/Home/Home.styled.jsx","components/PersonItem/PersonItem.jsx","pages/Person/Person.jsx","utils/constants.js","utils/fetchData.js","utils/functions.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Button } from 'components/BackLinkButton/BackLinkButton.styled';\n\nexport const TitleBox = styled.div`\n  display: flex;\n  gap: 30px;\n\n  min-height: 50px;\n  justify-content: space-around;\n  align-items: center;\n  min-width: 350px;\n  max-width: 530px;\n  @media (max-width: 520px) {\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n  vertical-align: super;\n  @media (max-width: 520px) {\n    font-size: 28px;\n  }\n`;\nexport const ButtonThumb = styled.div`\n  margin-top: 10px;\n  @media (max-width: 421px) {\n    margin-bottom: 5px;\n  }\n  @media (max-width: 520px) {\n    margin-top: 0px;\n  }\n`;\nexport const ButtonsChanged = styled(Button)`\n  min-width: 100px;\n  &:focus {\n    // color: darkblue;\n    // color: white;\n  }\n  &:hover {\n    color: blue;\n  }\n`;\n","import {\n  ButtonsChanged,\n  Title,\n  TitleBox,\n  ButtonThumb,\n} from './TrendingTitle.styled';\nimport { useState } from 'react';\nimport { getTrendingTitle } from 'utils/functions';\n\nexport const TrendingTitle = ({ setPeriod, period, type }) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const togglePeriod = () => {\n    setPeriod(period === 'day' ? 'week' : 'day');\n  };\n  return (\n    <TitleBox>\n      <Title>{getTrendingTitle(period, type, isHovered)}</Title>\n      <ButtonThumb>\n        <ButtonsChanged\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n          onClick={togglePeriod}\n        >\n          Timeframe\n        </ButtonsChanged>\n      </ButtonThumb>\n    </TitleBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding-left: 20px;\n  padding-top: 5px;\n  background-color: cadetblue;\n`;\n\nexport const SortThumb = styled.div`\n  padding-top: 10px;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-around;\n  max-width: 500px;\n  padding: 5px 0 5px 0;\n`;\n\nexport const Title = styled.h1`\n  font-size: xx-large;\n`;\n","import { Link } from 'react-router-dom';\nimport { Text, Card, Image } from 'components/MovieCast/MovieCast.styled';\nimport { getImageUrl } from 'utils/fetchData';\n\nexport const PersonItem = ({ person, location, index }) => {\n  const {\n    id,\n    name,\n    // known_for,\n    profile_path,\n  } = person;\n  return (\n    <li key={id}>\n      <Link to={`/person/${id}`} state={{ from: location }}>\n        <Card>\n          <Image src={getImageUrl(profile_path, true)} alt={name} />\n          <p>\n            {index + 1}. {name}\n          </p>\n          <Text></Text>\n        </Card>\n      </Link>\n    </li>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchData, getTrendsUrl } from 'utils/fetchData';\nimport { Container } from 'pages/Home/Home.styled';\nimport { CastList } from 'components/MovieCast/MovieCast.styled';\nimport { PersonItem } from 'components/PersonItem/PersonItem';\nimport { TrendingTitle } from 'components/TrendingTitle/TrendingTitle';\n\nexport default function Person() {\n  const [trending, setTrending] = useState(null);\n  const [period, setPeriod] = useState('day');\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const URL = getTrendsUrl('person', period);\n    fetchData(URL, setTrending, setError);\n  }, [period]);\n\n  if (trending) {\n    const { results } = trending;\n    console.log(results);\n\n    return (\n      <Container>\n        <TrendingTitle setPeriod={setPeriod} period={period} type={'person'} />\n        <CastList>\n          {results.map((person, index) => (\n            <PersonItem\n              key={person.id}\n              person={person}\n              location={location}\n              index={index}\n            />\n          ))}\n        </CastList>\n      </Container>\n    );\n  }\n  return <Container>{error ? error.message : <p>Searching...</p>}</Container>;\n}\n","export const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\nexport const searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en',\n});\n\nexport const basicURL = 'https://api.themoviedb.org/3';\n\nexport const basicBigImageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const basicSmallImageURL = 'https://image.tmdb.org/t/p/w200';\n","import {\n  searchParams,\n  basicURL,\n  basicSmallImageURL,\n  basicBigImageURL,\n} from './constants';\nimport hasNotPhotoPerson from '../images/NoPhotoPerson.png';\nimport hasNotFilmImage from '../images/NoFilmImage.png';\n\nexport function fetchData(url, setData, setError) {\n  fetch(url)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong....'));\n    })\n    .then(data => {\n      setData(data);\n    })\n    .catch(error => {\n      setError(error);\n    });\n}\n\nexport function fetchImage(imageUrl, setHoveredImageUrl) {\n  const fetchUrl = basicSmallImageURL + imageUrl;\n\n  fetch(fetchUrl)\n    .then(response => response.blob())\n    .then(blob => URL.createObjectURL(blob))\n    .then(url => setHoveredImageUrl(url))\n    .catch(error => console.error(error));\n}\n\nexport function getImageUrl(imagePath, small = false, type = 'person') {\n  if (imagePath) {\n    return small\n      ? basicSmallImageURL + imagePath\n      : basicBigImageURL + imagePath;\n  } else {\n    return type === 'person' ? hasNotPhotoPerson : hasNotFilmImage;\n  }\n}\n\nexport function getExtraInfoUrl(id, type, dataType) {\n  const mediaType = type === 'tv' ? 'tv' : 'movie';\n  const dataAltType = dataType === 'cast' ? 'credits' : 'reviews';\n  const URL = `${basicURL}/${mediaType}/${id}/${dataAltType}?${searchParams}`;\n  return URL;\n}\n\nexport function getTrendsUrl(type, period, language = 'en') {\n  const newSearchParams = new URLSearchParams(searchParams);\n  newSearchParams.set('language', language);\n  const mediaType =\n    type === 'tv' ? 'tv' : type === 'person' ? 'person' : 'movie';\n  const URL = `${basicURL}/trending/${mediaType}/${period}?${newSearchParams}`;\n  return URL;\n}\n","import { Fragment } from 'react';\n\nexport function voteToPersent(vote) {\n  if (vote) {\n    const persentVote = Math.floor(vote * 10);\n    return `${persentVote}%`;\n  }\n  return '--%';\n}\n\nexport function formateDate(date) {\n  if (date) {\n    const newDate = new Date(date);\n    const formattedDate = newDate.toUTCString().slice(5, 16);\n    return formattedDate;\n  }\n  return 'no data';\n}\n\nexport function sortByField(arr, field, order = false) {\n  const direction = order ? 1 : -1;\n  return arr.sort((a, b) => {\n    if (a[field] < b[field]) {\n      return -1 * direction;\n    }\n    if (a[field] > b[field]) {\n      return 1 * direction;\n    }\n    return 0;\n  });\n}\n\nexport function makeNewArray(arr) {\n  const newArr = arr.map(item => {\n    if (item !== null) {\n      return { ...item };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function makeWithoutLowVotes(arr) {\n  const newArr = arr.map(item => {\n    if (item.vote_count < 10) {\n      return { ...item, vote_average: 0 };\n    } else {\n      return item;\n    }\n  });\n  return newArr;\n}\n\nexport function toggleOrder(order) {\n  return !order;\n}\n\nexport const getSortedFilmography = (fieldSorted, list, order) => {\n  let sortedFilmography;\n\n  switch (fieldSorted) {\n    case 'Trends':\n      sortedFilmography = list;\n      break;\n    case 'Rating':\n      const withoutLowVotes = makeWithoutLowVotes(list);\n      sortedFilmography = sortByField(withoutLowVotes, 'vote_average', order);\n      break;\n    case 'Date':\n      const newArrayByDate = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByDate, 'release_date', order);\n      break;\n    case 'AirDate':\n      const newArrayByAirDate = makeNewArray(list);\n      sortedFilmography = sortByField(\n        newArrayByAirDate,\n        'first_air_date',\n        order\n      );\n      break;\n    case 'Title':\n      const newArrayByTitle = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByTitle, 'title', order);\n      break;\n    case 'Name':\n      const newArrayByName = makeNewArray(list);\n      sortedFilmography = sortByField(newArrayByName, 'name', order);\n      break;\n\n    default:\n      sortedFilmography = list;\n  }\n\n  return sortedFilmography;\n};\n\nexport function removeDuplicates(arr) {\n  const uniqueArr = [];\n\n  arr.forEach(({ author, content }) => {\n    if (\n      !uniqueArr.find(\n        item => item.author === author && item.content === content\n      )\n    ) {\n      uniqueArr.push({ author, content });\n    }\n  });\n\n  return uniqueArr;\n}\n\nexport const getTrendingTitle = (period, type, isHovered) => {\n  let mediaType;\n\n  switch (type) {\n    case 'tv':\n      mediaType = 'TV Shows';\n      break;\n    case 'movie':\n      mediaType = 'Movies';\n      break;\n    case 'person':\n      mediaType = 'People';\n      break;\n    default:\n      mediaType = 'Movies';\n  }\n\n  const timePeriod = period === 'week' ? 'week' : 'today';\n  return (\n    <Fragment>\n      {mediaType} trending{' '}\n      <span style={{ textDecoration: isHovered ? 'underline' : 'none' }}>\n        {timePeriod}\n      </span>\n    </Fragment>\n  );\n  // `${mediaType} trending ${timePeriod} `;\n};\n\nvar countries = require('i18n-iso-countries');\ncountries.registerLocale(require('i18n-iso-countries/langs/en.json'));\nexport function getCountryName(code, language = 'en') {\n  return countries.getName(code, language);\n}\n"],"names":["TitleBox","styled","Title","ButtonThumb","ButtonsChanged","Button","TrendingTitle","setPeriod","period","type","useState","isHovered","setIsHovered","getTrendingTitle","onMouseEnter","onMouseLeave","onClick","Container","SortThumb","PersonItem","person","location","index","id","name","profile_path","to","state","from","src","getImageUrl","alt","Person","trending","setTrending","error","setError","useLocation","useEffect","URL","getTrendsUrl","fetchData","results","console","log","map","message","API_KEY","process","searchParams","URLSearchParams","api_key","language","basicURL","basicBigImageURL","basicSmallImageURL","url","setData","fetch","then","response","ok","json","Promise","reject","Error","data","catch","fetchImage","imageUrl","setHoveredImageUrl","fetchUrl","blob","createObjectURL","imagePath","small","hasNotPhotoPerson","hasNotFilmImage","getExtraInfoUrl","dataType","mediaType","dataAltType","newSearchParams","set","voteToPersent","vote","persentVote","Math","floor","formateDate","date","Date","toUTCString","slice","sortByField","arr","field","order","direction","sort","a","b","makeNewArray","item","getSortedFilmography","fieldSorted","list","sortedFilmography","vote_count","vote_average","removeDuplicates","uniqueArr","forEach","author","content","find","push","timePeriod","Fragment","style","textDecoration","countries","require","getCountryName","code","getName","registerLocale"],"sourceRoot":""}
{"version":3,"file":"static/js/291.299a5bf2.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,GAAAA,GAAH,8DAKRC,EAAOD,EAAAA,GAAAA,EAAH,6CAIJE,EAAQF,EAAAA,GAAAA,IAAH,2DAKLG,EAAOH,EAAAA,GAAAA,IAAH,2K,qHCdJI,E,OAAcJ,GAAAA,GAAH,mE,SCGT,SAASK,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KA2BA,IAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAJY,qCAORC,EAAG,6CAAyCX,EAAzC,oBAAuDQ,GAEhEJ,EAAgB,MAChBQ,MAAMD,GACHE,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,+DACjC,IACAN,MAAK,SAAAV,GACJC,EAAgBD,EACjB,IACAiB,OAAM,SAAAf,GACLC,EAASD,EACV,GACJ,GAAE,CAACL,IAEAG,EAAc,CAChB,IAAQkB,EAAYlB,EAAZkB,QACR,OAAIA,EAAQC,OAAS,GAEjB,2BACE,wBACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,SAAC3B,EAAD,UAAc0B,KACd,SAAC,KAAD,UAAOC,MAFAD,EADE,SAWjB,0BACGnB,EAAQA,EAAMqB,SAAU,yDAIhC,CACF,C","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Text = styled.p`\n  font-size: small;\n`;\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  font-weight: 500;\n  width: 150px;\n  height: 200px;\n`;\n","import styled from 'styled-components';\n\nexport const ReviewTitle = styled.ul`\n  margin-left: 20px;\n  font-weight: 500;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Text } from 'components/MovieCast/MovieCast.styled';\nimport { ReviewTitle } from './MovieReviews.styled';\n\nexport default function MovieReviews() {\n  const { id } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  const API_KEY = 'b30750fbe582936755a0930282f9befd';\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?${searchParams}`;\n\n    setMovieReviews(null);\n    fetch(URL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new Error('Щось не так...'));\n      })\n      .then(movieReviews => {\n        setMovieReviews(movieReviews);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [id]);\n\n  if (movieReviews) {\n    const { results } = movieReviews;\n    if (results.length > 0) {\n      return (\n        <main>\n          <ul>\n            {results.map(({ author, content }) => (\n              <li key={author}>\n                <ReviewTitle>{author}</ReviewTitle>\n                <Text>{content}</Text>\n              </li>\n            ))}\n          </ul>\n        </main>\n      );\n    } else {\n      return (\n        <main>\n          {error ? error.message : <p>We couldn't find any reviews</p>}\n        </main>\n      );\n    }\n  }\n}\n"],"names":["CastList","styled","Text","Image","Card","ReviewTitle","MovieReviews","id","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","searchParams","URLSearchParams","api_key","URL","fetch","then","response","ok","json","Promise","reject","Error","catch","results","length","map","author","content","message"],"sourceRoot":""}